

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 16:50:48 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F54
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=ENTRY,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	jmp_tab,global,class=ENTRY,delta=2
    14                           	dabs	1,0x1C,4
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22                           
    23                           	psect	idataBANK0
    24  022                     __pidataBANK0:	
    25                           
    26                           ;initializer for _calcBuffer
    27  022  81C                	retlw	28
    28  023  810                	retlw	16
    29  024  808                	retlw	8
    30  025  800                	retlw	0
    31  026  800                	retlw	0
    32  027  800                	retlw	0
    33  028  800                	retlw	0
    34  029  800                	retlw	0
    35  0000                     _OPTION	set	0
    36  0005                     _PORTA	set	5
    37  0006                     _PORTB	set	6
    38  0001                     _TMR0	set	1
    39  0005                     _TRISA	set	5
    40  0006                     _TRISB	set	6
    41                           
    42                           ; #config settings
    43  0000                     
    44                           	psect	cinit
    45  003                     start_initialization:	
    46  003                     __initialization:	
    47                           
    48                           ; Clear objects allocated to BANK0
    49  003  C07                	movlw	__pbssBANK0
    50  004  024                	movwf	4
    51  005  C12                	movlw	(__pbssBANK0+11)& (0+255)
    52  006  919                	fcall	clear_ram0
    53                           
    54                           ; Initialize objects allocated to BANK0
    55  007  922                	fcall	__pidataBANK0	;fetch initializer
    56  008  032                	movwf	__pdataBANK0& (0+31)
    57  009  923                	fcall	__pidataBANK0+1	;fetch initializer
    58  00A  033                	movwf	(__pdataBANK0+1)& (0+31)
    59  00B  924                	fcall	__pidataBANK0+2	;fetch initializer
    60  00C  034                	movwf	(__pdataBANK0+2)& (0+31)
    61  00D  925                	fcall	__pidataBANK0+3	;fetch initializer
    62  00E  035                	movwf	(__pdataBANK0+3)& (0+31)
    63  00F  926                	fcall	__pidataBANK0+4	;fetch initializer
    64  010  036                	movwf	(__pdataBANK0+4)& (0+31)
    65  011  927                	fcall	__pidataBANK0+5	;fetch initializer
    66  012  037                	movwf	(__pdataBANK0+5)& (0+31)
    67  013  928                	fcall	__pidataBANK0+6	;fetch initializer
    68  014  038                	movwf	(__pdataBANK0+6)& (0+31)
    69  015  929                	fcall	__pidataBANK0+7	;fetch initializer
    70  016  039                	movwf	(__pdataBANK0+7)& (0+31)
    71  017                     end_of_initialization:	
    72                           ;End of C runtime variable initialization code
    73                           
    74  017                     __end_of__initialization:	
    75  017  064                	clrf	4
    76  018  B8C                	ljmp	_main	;jump to C main() function
    77                           
    78                           	psect	bssBANK0
    79  007                     __pbssBANK0:	
    80  007                     _displayBuffer:	
    81  007                     	ds	8
    82  00F                     _Position:	
    83  00F                     	ds	1
    84  010                     _Union:	
    85  010                     	ds	1
    86  011                     _count:	
    87  011                     	ds	1
    88                           
    89                           	psect	dataBANK0
    90  012                     __pdataBANK0:	
    91  012                     _calcBuffer:	
    92  012                     	ds	8
    93                           
    94                           	psect	clrtext
    95  019                     clear_ram0:	
    96                           ;	Called with FSR containing the base address, and
    97                           ;	W with the last address+1
    98                           
    99  019  004                	clrwdt	;clear the watchdog before getting into this loop
   100  01A                     clrloop0:	
   101  01A  060                	clrf	0	;clear RAM location pointed to by FSR
   102  01B  2A4                	incf	4,f	;increment pointer
   103  01C  184                	xorwf	4,w	;XOR with final address
   104  01D  E1F                	andlw	31	;Test low bits only
   105  01E  643                	btfsc	3,2	;have we reached the end yet?
   106  01F  800                	retlw	0	;all done for this memory range, return
   107  020  184                	xorwf	4,w	;XOR again to restore value
   108  021  A1A                	goto	clrloop0	;do the next byte
   109                           
   110                           	psect	cstackCOMMON
   111  000                     __pcstackCOMMON:	
   112  000                     ??_countNeighbors:	
   113  000                     ??_main:	
   114                           ; 0 bytes @ 0x0
   115                           
   116                           
   117                           	psect	cstackBANK0
   118  01A                     __pcstackBANK0:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  01A                     ?_countNeighbors:	
   122  01A                     ?_main:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  01A                     countNeighbors@add:	
   126                           ; 2 bytes @ 0x0
   127                           
   128                           
   129                           ; 1 bytes @ 0x0
   130  01A                     	ds	1
   131                           
   132                           	psect	maintext
   133  18C                     __pmaintext:	
   134 ;;
   135 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   136 ;;
   137 ;; *************** function _main *****************
   138 ;; Defined at:
   139 ;;		line 58 in file "main.c"
   140 ;; Parameters:    Size  Location     Type
   141 ;;		None
   142 ;; Auto vars:     Size  Location     Type
   143 ;;		None
   144 ;; Return value:  Size  Location     Type
   145 ;;                  2   30[None  ] int 
   146 ;; Registers used:
   147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3, pclath, cstack
   148 ;; Tracked objects:
   149 ;;		On entry : B00/0
   150 ;;		On exit  : 0/0
   151 ;;		Unchanged: 0/0
   152 ;; Data sizes:     COMMON   BANK0
   153 ;;      Params:         0       0
   154 ;;      Locals:         0       0
   155 ;;      Temps:          0       0
   156 ;;      Totals:         0       0
   157 ;;Total ram usage:        0 bytes
   158 ;; Hardware stack levels required when called:    1
   159 ;; This function calls:
   160 ;;		_countNeighbors
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           
   167                           ;psect for function _main
   168  18C                     _main:	
   169                           
   170                           ;main.c: 61: OPTION = 0b00011111 ;
   171                           
   172                           ;incstack = 0
   173                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3+pclath+cstack]
   174  18C  C1F                	movlw	31
   175  18D  002                	option
   176                           
   177                           ;main.c: 62: TRISB = 0x00 ;
   178  18E  C00                	movlw	0
   179  18F  006                	tris	6
   180                           
   181                           ;main.c: 63: TRISA = 0x00 ;
   182  190  C00                	movlw	0
   183  191  005                	tris	5
   184  192                     l501:	
   185                           ;main.c: 65: for( ; ; ) {
   186                           
   187                           
   188                           ;main.c: 67: PORTA = Union.prescaler & 0x07 ;
   189  192  210                	movf	_Union,w
   190  193  E07                	andlw	7
   191  194  025                	movwf	5	;volatile
   192                           
   193                           ;main.c: 68: PORTB = displayBuffer[ PORTA ] = calcBuffer[ PORTA ] ;
   194  195  C12                	movlw	low (_calcBuffer| 0)
   195  196  1C5                	addwf	5,w
   196  197  024                	movwf	4
   197  198  200                	movf	0,w
   198  199  03F                	movwf	31
   199  19A  C07                	movlw	low (_displayBuffer| 0)
   200  19B  1C5                	addwf	5,w
   201  19C  024                	movwf	4
   202  19D  21F                	movf	31,w
   203  19E  020                	movwf	0
   204  19F  200                	movf	0,w
   205  1A0  026                	movwf	6	;volatile
   206                           
   207                           ;main.c: 69: PORTA |= 0x08 ;
   208  1A1  565                	bsf	5,3	;volatile
   209                           
   210                           ;main.c: 71: TMR0 = 0xC0 ;
   211  1A2  CC0                	movlw	192
   212  1A3  021                	movwf	1	;volatile
   213  1A4                     l509:	
   214                           ;main.c: 72: while( TMR0 ) __nop() ;
   215                           
   216  1A4  201                	movf	1,w	;volatile
   217  1A5  643                	btfsc	3,2
   218  1A6  BA9                	goto	l511
   219  1A7  000                	nop
   220  1A8  BA4                	goto	l509
   221  1A9                     l511:	
   222                           
   223                           ;main.c: 74: if( ++Union.prescaler ) continue ;
   224  1A9  C01                	movlw	1
   225  1AA  03F                	movwf	31
   226  1AB  21F                	movf	31,w
   227  1AC  1F0                	addwf	_Union,f
   228  1AD  743                	btfss	3,2
   229  1AE  B92                	goto	l501
   230                           
   231                           ;main.c: 76: PORTA = 0x00 ;
   232  1AF  065                	clrf	5	;volatile
   233                           
   234                           ;main.c: 78: for( Position.all = 0x00 ; !( Position.all & 0x08 ) ; Position.all++ ) {
   235  1B0  06F                	clrf	_Position
   236  1B1                     l561:	
   237  1B1  66F                	btfsc	_Position,3
   238  1B2  B92                	goto	l501
   239                           
   240                           ;main.c: 79: calcBuffer[ Position.all & 0x0F ] = 0x00 ;
   241  1B3  20F                	movf	_Position,w
   242  1B4  E0F                	andlw	15
   243  1B5  03C                	movwf	28
   244  1B6  C12                	movlw	low (_calcBuffer| 0)
   245  1B7  1DC                	addwf	28,w
   246  1B8  024                	movwf	4
   247  1B9  060                	clrf	0
   248                           
   249                           ;main.c: 80: Union.bitMask = 0x01 ;
   250  1BA  070                	clrf	_Union
   251  1BB  2B0                	incf	_Union,f
   252                           
   253                           ;main.c: 81: for( Position.all &= 0x0F ; !( Position.all & 0x80 ) ; Position.all += 0x10
      +                           ) {
   254  1BC  C0F                	movlw	15
   255  1BD  03F                	movwf	31
   256  1BE  21F                	movf	31,w
   257  1BF  16F                	andwf	_Position,f
   258  1C0                     l557:	
   259  1C0  6EF                	btfsc	_Position,7
   260  1C1  BFA                	goto	l559
   261                           
   262                           ;main.c: 83: count = 0 ;
   263  1C2  071                	clrf	_count
   264                           
   265                           ;main.c: 85: countNeighbors( 0x01 ) ;
   266  1C3  C01                	movlw	1
   267  1C4  92A                	fcall	entry__countNeighbors
   268                           
   269                           ;main.c: 86: countNeighbors( 0x16 ) ;
   270  1C5  C16                	movlw	22
   271  1C6  92A                	fcall	entry__countNeighbors
   272                           
   273                           ;main.c: 87: countNeighbors( 0x01 ) ;
   274  1C7  C01                	movlw	1
   275  1C8  92A                	fcall	entry__countNeighbors
   276                           
   277                           ;main.c: 88: countNeighbors( 0x01 ) ;
   278  1C9  C01                	movlw	1
   279  1CA  92A                	fcall	entry__countNeighbors
   280                           
   281                           ;main.c: 89: countNeighbors( 0x66 ) ;
   282  1CB  C66                	movlw	102
   283  1CC  92A                	fcall	entry__countNeighbors
   284                           
   285                           ;main.c: 90: countNeighbors( 0x01 ) ;
   286  1CD  C01                	movlw	1
   287  1CE  92A                	fcall	entry__countNeighbors
   288                           
   289                           ;main.c: 91: countNeighbors( 0x01 ) ;
   290  1CF  C01                	movlw	1
   291  1D0  92A                	fcall	entry__countNeighbors
   292                           
   293                           ;main.c: 92: countNeighbors( 0x16 ) ;
   294  1D1  C16                	movlw	22
   295  1D2  92A                	fcall	entry__countNeighbors
   296                           
   297                           ;main.c: 93: countNeighbors( 0x01 ) ;
   298  1D3  C01                	movlw	1
   299  1D4  92A                	fcall	entry__countNeighbors
   300                           
   301                           ;main.c: 95: if( ( count == 3 ) || ( displayBuffer[ Position.x ] & Union.bitMask ) && ( 
      +                          count == 4 ) )
   302  1D5  C03                	movlw	3
   303  1D6  191                	xorwf	_count,w
   304  1D7  643                	btfsc	3,2
   305  1D8  BE9                	goto	l551
   306  1D9  210                	movf	_Union,w
   307  1DA  03F                	movwf	31
   308  1DB  20F                	movf	_Position,w
   309  1DC  E0F                	andlw	15
   310  1DD  03C                	movwf	28
   311  1DE  C07                	movlw	low (_displayBuffer| 0)
   312  1DF  1DC                	addwf	28,w
   313  1E0  024                	movwf	4
   314  1E1  200                	movf	0,w
   315  1E2  15F                	andwf	31,w
   316  1E3  643                	btfsc	3,2
   317  1E4  BF3                	goto	l553
   318  1E5  C04                	movlw	4
   319  1E6  191                	xorwf	_count,w
   320  1E7  743                	btfss	3,2
   321  1E8  BF3                	goto	l553
   322  1E9                     l551:	
   323                           
   324                           ;main.c: 96: calcBuffer[ Position.x ] |= Union.bitMask ;
   325  1E9  210                	movf	_Union,w
   326  1EA  03F                	movwf	31
   327  1EB  20F                	movf	_Position,w
   328  1EC  E0F                	andlw	15
   329  1ED  03C                	movwf	28
   330  1EE  C12                	movlw	low (_calcBuffer| 0)
   331  1EF  1DC                	addwf	28,w
   332  1F0  024                	movwf	4
   333  1F1  21F                	movf	31,w
   334  1F2  120                	iorwf	0,f
   335  1F3                     l553:	
   336                           
   337                           ;main.c: 98: Union.bitMask <<= 1 ;
   338  1F3  403                	clrc
   339  1F4  370                	rlf	_Union,f
   340  1F5  C10                	movlw	16
   341  1F6  03F                	movwf	31
   342  1F7  21F                	movf	31,w
   343  1F8  1EF                	addwf	_Position,f
   344  1F9  BC0                	goto	l557
   345  1FA                     l559:	
   346  1FA  C01                	movlw	1
   347  1FB  03F                	movwf	31
   348  1FC  21F                	movf	31,w
   349  1FD  1EF                	addwf	_Position,f
   350  1FE  BB1                	goto	l561
   351  1FF                     __end_of_main:	
   352                           ;main.c: 100: }
   353                           ;main.c: 101: }
   354                           ;main.c: 103: }
   355                           
   356                           
   357                           	psect	text1
   358  16B                     __ptext1:	
   359 ;; *************** function _countNeighbors *****************
   360 ;; Defined at:
   361 ;;		line 51 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  add             1    wreg     unsigned char 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  add             1    0[BANK0 ] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;		None               void
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0
   375 ;;      Params:         0       0
   376 ;;      Locals:         0       1
   377 ;;      Temps:          0       0
   378 ;;      Totals:         0       1
   379 ;;Total ram usage:        1 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _countNeighbors
   390  16B                     _countNeighbors:	
   391                           
   392                           ;countNeighbors@add stored from wreg
   393  16B  03A                	movwf	countNeighbors@add
   394                           
   395                           ;main.c: 52: Position.all += add ;
   396  16C  21A                	movf	countNeighbors@add,w
   397  16D  03F                	movwf	31
   398  16E  21F                	movf	31,w
   399  16F  1EF                	addwf	_Position,f
   400                           
   401                           ;main.c: 53: Position.all &= 0x77 ;
   402  170  C77                	movlw	119
   403  171  03F                	movwf	31
   404  172  21F                	movf	31,w
   405  173  16F                	andwf	_Position,f
   406                           
   407                           ;main.c: 54: if( ( displayBuffer[ Position.x ] >> ( Position.y ) ) & 0x01 )
   408  174  38F                	swapf	_Position,w
   409  175  E0F                	andlw	15
   410  176  03F                	movwf	31
   411  177  2BF                	incf	31,f
   412  178  20F                	movf	_Position,w
   413  179  E0F                	andlw	15
   414  17A  03C                	movwf	28
   415  17B  C07                	movlw	low (_displayBuffer| 0)
   416  17C  1DC                	addwf	28,w
   417  17D  024                	movwf	4
   418  17E  200                	movf	0,w
   419  17F  03E                	movwf	30
   420  180  B83                	goto	u104
   421  181                     u105:	
   422  181  403                	clrc
   423  182  33E                	rrf	30,f
   424  183                     u104:	
   425  183  2FF                	decfsz	31,f
   426  184  B81                	goto	u105
   427  185  71E                	btfss	30,0
   428  186  800                	retlw	0
   429                           
   430                           ;main.c: 55: count++ ;
   431  187  C01                	movlw	1
   432  188  03F                	movwf	31
   433  189  21F                	movf	31,w
   434  18A  1F1                	addwf	_count,f
   435  18B  800                	retlw	0
   436  18C                     __end_of_countNeighbors:	
   437  001C                     btemp	set	28	;btemp
   438  001C                     wtemp	set	28
   439  001C                     wtemp0	set	28
   440  001E                     wtemp1	set	30
   441  0020                     wtemp2	set	32
   442  0022                     wtemp3	set	34
   443  0024                     wtemp4	set	36
   444  0026                     wtemp5	set	38
   445  001D                     wtemp6	set	29
   446  001C                     ttemp	set	28
   447  001C                     ttemp0	set	28
   448  001F                     ttemp1	set	31
   449  0022                     ttemp2	set	34
   450  0025                     ttemp3	set	37
   451  001D                     ttemp4	set	29
   452  001C                     ltemp	set	28
   453  001C                     ltemp0	set	28
   454  0020                     ltemp1	set	32
   455  0024                     ltemp2	set	36
   456  001E                     ltemp3	set	30
   457                           
   458                           	psect	jmp_tab
   459  02A                     __pjmp_tab:	
   460                           ;incstack = 0
   461                           ; Regs used in _countNeighbors: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3]
   462                           
   463  02A                     entry__countNeighbors:	
   464  02A  B6B                	ljmp	_countNeighbors


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            23      1      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_countNeighbors

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      22
                     _countNeighbors
 ---------------------------------------------------------------------------------
 (1) _countNeighbors                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _countNeighbors

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
STACK                0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
DATA                 0      0      14       1        0.0%
BITCOMMON            0      0       0       2        0.0%
BITBANK0            17      0       0       3        0.0%
COMMON               0      0       0       4        0.0%
BANK0               17      1      14       5       87.0%
ABS                  0      0      14       6        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 16:50:48 2015

            __CFG_CP$OFF 0000                       fsr 0004              __CFG_OSC$HS 0000  
                    l501 0192                      l511 01A9                      l509 01A4  
                    l551 01E9                      l553 01F3                      l561 01B1  
                    l557 01C0                      l559 01FA                      u104 0183  
                    u105 0181  __size_of_countNeighbors 0021                      fsr0 0004  
                    indf 0000             __CFG_WDT$OFF 0000                     _TMR0 0001  
                   _main 018C                     btemp 001C                     ltemp 001C  
                   start 0002                     ttemp 001C                     wtemp 001C  
                  ?_main 001A                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0005                    _TRISB 0006                    _Union 0010  
                  _count 0011                    ltemp0 001C                    ltemp1 0020  
                  ltemp2 0024                    ltemp3 001E                    ttemp0 001C  
                  ttemp1 001F                    ttemp2 0022                    ttemp3 0025  
                  ttemp4 001D                    status 0003                    wtemp0 001C  
                  wtemp1 001E                    wtemp2 0020                    wtemp3 0022  
                  wtemp4 0024                    wtemp5 0026                    wtemp6 001D  
        __initialization 0003             __end_of_main 01FF                   ??_main 0000  
                 _OPTION 0000           _countNeighbors 016B  __end_of__initialization 0017  
         __pcstackCOMMON 0000             __pidataBANK0 0022   __end_of_countNeighbors 018C  
             _calcBuffer 0012               __pbssBANK0 0007               __pmaintext 018C  
        ?_countNeighbors 001A                  __ptext1 016B                  clrloop0 001A  
   end_of_initialization 0017     entry__countNeighbors 002A      start_initialization 0003  
       ??_countNeighbors 0000              __pdataBANK0 0012                ___latbits 0000  
          __pcstackBANK0 001A                __pjmp_tab 002A                clear_ram0 0019  
               _Position 000F            __size_of_main 0073        countNeighbors@add 001A  
          _displayBuffer 0007  
