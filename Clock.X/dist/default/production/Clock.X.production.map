Microchip MPLAB XC8 Compiler V1.34 ()

Linker command line:

--edf=/Applications/microchip/xc8/v1.34/dat/en_msgs.txt -cs \
  -h+dist/default/production/Clock.X.production.sym \
  --cmf=dist/default/production/Clock.X.production.cmf -z -Q16F1508 \
  -o/tmp/cgtN6Tdyl -Mdist/default/production/Clock.X.production.map -E1 \
  -ver=XC8 -ASTACK=02066h-020efh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABIGRAM=02000h-020EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k /tmp/cgtWZVTe9.obj \
  dist/default/production/Clock.X.production.obj 

Object code version is 3.11

Machine type is 16F1508



                Name                               Link     Load   Length Selector   Space Scale
/tmp/cgtWZVTe9.obj
                end_init                             71       71        2        8       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        2    1000E       0
dist/default/production/Clock.X.production.obj
                cinit                                73       73       23        8       0
                intentry                              4        4       6D        8       0
                text16                              FA6      FA6       5A     1F4C       0
                text14                              525      525       EF        8       0
                swtext2                             810      810        E     1000       0
                text13                              404      404      121        8       0
                text12                              614      614       75        8       0
                text11                              689      689       61        8       0
                text10                              F68      F68       3E     1ED0       0
                text9                               ECD      ECD       1D     1D9A       0
                text8                               E9A      E9A       19     1D34       0
                text7                               EB3      EB3       1A     1D66       0
                text6                               E82      E82       18     1D04       0
                text5                               F08      F08       2A     1E10       0
                text4                               E74      E74        E     1CE8       0
                text3                               EEA      EEA       1E     1DD4       0
                text2                               F32      F32       36     1E64       0
                text1                               7BF      7BF       41      F7E       0
                swtext1                             800      800       10     1000       0
                maintext                             96       96      36E        8       0
                cstackBANK0                          20       20       2B       20       1
                cstackCOMMON                         70       70        A       70       1
                inittext                            E68      E68        6     1CD0       0
                clrtext                             E6E      E6E        6     1CDC       0
                dataBANK1                            A0       A0       16       A0       1
                dataBANK0                            6C       6C        4       20       1
                bssBANK0                             4B       4B       21       20       1
                bssCOMMON                            7A       7A        1       70       1
                stringtext                          700      700       BF        E       0
                idataBANK1                          6EA      6EA       16        8       0
                idataBANK0                          E64      E64        4     1CC8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             71       71        2         0
                cinit                                73       73       23         0
                intentry                              4        4       6D         0
                reset_vec                             0        0        2         0
                text16                              FA6      FA6       5A         0
                text14                              525      525       EF         0
                text13                              404      404      121         0
                text12                              614      614       75         0
                text11                              689      689       61         0
                text10                              F68      F68       3E         0
                text9                               ECD      ECD       1D         0
                text8                               E9A      E9A       19         0
                text7                               EB3      EB3       1A         0
                text6                               E82      E82       18         0
                text5                               F08      F08       2A         0
                text4                               E74      E74        E         0
                text3                               EEA      EEA       1E         0
                text2                               F32      F32       36         0
                text1                               7BF      7BF       41         0
                maintext                             96       96      36E         0
                inittext                            E68      E68        6         0
                clrtext                             E6E      E6E        6         0
                idataBANK1                          6EA      6EA       16         0
                idataBANK0                          E64      E64        4         0

        CLASS   STRCODE        
                stringtext                          700      700       BF         0

        CLASS   STRING         

        CLASS   CONST          
                swtext2                             810      810        E         0
                swtext1                             800      800       10         0

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1
                bssCOMMON                            7A       7A        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       2B         1
                dataBANK0                            6C       6C        4         1
                bssBANK0                             4B       4B       21         1

        CLASS   BANK1          
                dataBANK1                            A0       A0       16         1

        CLASS   BANK2          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0006FC  000700         8       0  CODE        2
                cstackBANK0                    000020  000050  000070        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                dataBANK1                      0000A0  000016  0000B6        A0       1  BANK1       1
                stringtext                     000700  0000BF  0007BF         E       0  STRCODE     2
                text1                          0007BF  000041  000800       F7E       0  CODE        2
                swtext1                        000800  00001E  00081E      1000       0  CONST       2
                idataBANK0                     000E64  000004  000E68      1CC8       0  CODE        2
                inittext                       000E68  000006  000E6E      1CD0       0  CODE        2
                clrtext                        000E6E  000006  000E74      1CDC       0  CODE        2
                text4                          000E74  00000E  000E82      1CE8       0  CODE        2
                text6                          000E82  000018  000E9A      1D04       0  CODE        2
                text8                          000E9A  000019  000EB3      1D34       0  CODE        2
                text7                          000EB3  00001A  000ECD      1D66       0  CODE        2
                text9                          000ECD  00001D  000EEA      1D9A       0  CODE        2
                text3                          000EEA  00001E  000F08      1DD4       0  CODE        2
                text5                          000F08  00002A  000F32      1E10       0  CODE        2
                text2                          000F32  000036  000F68      1E64       0  CODE        2
                text10                         000F68  00003E  000FA6      1ED0       0  CODE        2
                text16                         000FA6  00005A  001000      1F4C       0  CODE        2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            000B6-000EF              3A           1
        BANK2            00120-0016F              50           1
        BIGRAM           02000-020EF              F0           1
        CODE             00002-00003               2           2
                         0081E-00E63             646
        COMMON           0007B-0007D               3           1
        CONST            00002-00003               2           2
                         0081E-00E63             100
        ENTRY            00002-00003               2           2
                         0081E-00E63             100
        IDLOC            08000-08003               4           2
        RAM              000B6-000EF              3A           1
                         00120-0016F              50
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            02066-020EF              8A           1
        STRCODE          00002-00003               2           2
                         0081E-00E63             646
        STRING           00002-00003               2           2
                         0081E-00E63             100

                                  Symbol Table

_ANSELA                                      (abs)        0018C
_ANSELB                                      (abs)        0018D
_ANSELC                                      (abs)        0018E
_CURSOR_BITMAP                               stringtext   00731
_HEX_TABLE                                   stringtext   00700
_INTCONbits                                  (abs)        0000B
_IOCAF3                                      (abs)        01C9B
_IOCANbits                                   (abs)        00392
_IOCIE                                       (abs)        0005B
_IOCIF                                       (abs)        00058
_LATBbits                                    (abs)        0010D
_LATC                                        (abs)        0010E
_MESSAGE_MENU                                dataBANK1    000AE
_OPTION_REGbits                              (abs)        00095
_OSCCONbits                                  (abs)        00099
_PARALLEL_LCD_ROW_SELECT                     stringtext   00713
_PIE1bits                                    (abs)        00091
_PIR1bits                                    (abs)        00011
_PORTA                                       (abs)        0000C
_PR2                                         (abs)        0001B
_PWM3CONbits                                 (abs)        00619
_PWM3DCH                                     (abs)        00618
_PWM3DCL                                     (abs)        00617
_PWM3OE                                      (abs)        030CE
_SSP1ADD                                     (abs)        00212
_SSP1BUF                                     (abs)        00211
_SSP1CON1                                    (abs)        00215
_SSP1CON2bits                                (abs)        00216
_SSP1IF                                      (abs)        0008B
_SSP1STAT                                    (abs)        00214
_SSPSTATbits                                 (abs)        00214
_STR_DAY_OF_WEEK                             dataBANK1    000A0
_T2CONbits                                   (abs)        0001C
_TMR0                                        (abs)        00015
_TMR2                                        (abs)        0001A
_TRISA                                       (abs)        0008C
_TRISB                                       (abs)        0008D
_TRISC                                       (abs)        0008E
_VALUE_INFORMATIONS                          stringtext   00715
__                                           intentry     00004
__@i                                         cstackCOMMON 00079
__@isTimeToAlerm                             cstackCOMMON 00078
__CFG_BOREN$ON                               (abs)        00000
__CFG_BORV$HI                                (abs)        00000
__CFG_CLKOUTEN$OFF                           (abs)        00000
__CFG_CP$OFF                                 (abs)        00000
__CFG_FCMEN$ON                               (abs)        00000
__CFG_FOSC$INTOSC                            (abs)        00000
__CFG_IESO$OFF                               (abs)        00000
__CFG_LPBOR$ON                               (abs)        00000
__CFG_LVP$OFF                                (abs)        00000
__CFG_MCLRE$OFF                              (abs)        00000
__CFG_PWRTE$ON                               (abs)        00000
__CFG_STVREN$ON                              (abs)        00000
__CFG_WDTE$ON                                (abs)        00000
__CFG_WRT$OFF                                (abs)        00000
__Habs1                                      abs1         00000
__Hbank0                                     bank0        00000
__Hbank1                                     bank1        00000
__Hbank10                                    bank10       00000
__Hbank11                                    bank11       00000
__Hbank12                                    bank12       00000
__Hbank13                                    bank13       00000
__Hbank14                                    bank14       00000
__Hbank15                                    bank15       00000
__Hbank16                                    bank16       00000
__Hbank17                                    bank17       00000
__Hbank18                                    bank18       00000
__Hbank19                                    bank19       00000
__Hbank2                                     bank2        00000
__Hbank20                                    bank20       00000
__Hbank21                                    bank21       00000
__Hbank22                                    bank22       00000
__Hbank23                                    bank23       00000
__Hbank24                                    bank24       00000
__Hbank25                                    bank25       00000
__Hbank26                                    bank26       00000
__Hbank27                                    bank27       00000
__Hbank28                                    bank28       00000
__Hbank29                                    bank29       00000
__Hbank3                                     bank3        00000
__Hbank30                                    bank30       00000
__Hbank31                                    bank31       00000
__Hbank4                                     bank4        00000
__Hbank5                                     bank5        00000
__Hbank6                                     bank6        00000
__Hbank7                                     bank7        00000
__Hbank8                                     bank8        00000
__Hbank9                                     bank9        00000
__Hbigram                                    bigram       00000
__HbssBANK0                                  bssBANK0     00000
__HbssCOMMON                                 bssCOMMON    00000
__Hcinit                                     cinit        00096
__Hclrtext                                   clrtext      00000
__Hcode                                      code         00000
__Hcommon                                    common       00000
__Hconfig                                    config       08009
__HcstackBANK0                               cstackBANK0  00000
__HcstackCOMMON                              cstackCOMMON 00000
__HdataBANK0                                 dataBANK0    00000
__HdataBANK1                                 dataBANK1    00000
__Heeprom_data                               eeprom_data  00000
__Hend_init                                  end_init     00073
__Hfunctab                                   functab      00000
__HidataBANK0                                idataBANK0   00000
__HidataBANK1                                idataBANK1   00000
__Hidloc                                     idloc        00000
__Hinit                                      init         00071
__Hinittext                                  inittext     00000
__Hintentry                                  intentry     00071
__Hmaintext                                  maintext     00000
__Hpowerup                                   powerup      00000
__Hram                                       ram          00000
__Hreset_vec                                 reset_vec    00002
__Hsfr0                                      sfr0         00000
__Hsfr1                                      sfr1         00000
__Hsfr10                                     sfr10        00000
__Hsfr11                                     sfr11        00000
__Hsfr12                                     sfr12        00000
__Hsfr13                                     sfr13        00000
__Hsfr14                                     sfr14        00000
__Hsfr15                                     sfr15        00000
__Hsfr16                                     sfr16        00000
__Hsfr17                                     sfr17        00000
__Hsfr18                                     sfr18        00000
__Hsfr19                                     sfr19        00000
__Hsfr2                                      sfr2         00000
__Hsfr20                                     sfr20        00000
__Hsfr21                                     sfr21        00000
__Hsfr22                                     sfr22        00000
__Hsfr23                                     sfr23        00000
__Hsfr24                                     sfr24        00000
__Hsfr25                                     sfr25        00000
__Hsfr26                                     sfr26        00000
__Hsfr27                                     sfr27        00000
__Hsfr28                                     sfr28        00000
__Hsfr29                                     sfr29        00000
__Hsfr3                                      sfr3         00000
__Hsfr30                                     sfr30        00000
__Hsfr31                                     sfr31        00000
__Hsfr4                                      sfr4         00000
__Hsfr5                                      sfr5         00000
__Hsfr6                                      sfr6         00000
__Hsfr7                                      sfr7         00000
__Hsfr8                                      sfr8         00000
__Hsfr9                                      sfr9         00000
__Hspace_0                                   (abs)        08009
__Hspace_1                                   (abs)        000B6
__Hspace_2                                   (abs)        00000
__Hspace_3                                   (abs)        00000
__Hstack                                     stack        00000
__Hstrings                                   strings      00000
__Hstringtext                                stringtext   00000
__Htext                                      text         00000
__Labs1                                      abs1         00000
__Lbank0                                     bank0        00000
__Lbank1                                     bank1        00000
__Lbank10                                    bank10       00000
__Lbank11                                    bank11       00000
__Lbank12                                    bank12       00000
__Lbank13                                    bank13       00000
__Lbank14                                    bank14       00000
__Lbank15                                    bank15       00000
__Lbank16                                    bank16       00000
__Lbank17                                    bank17       00000
__Lbank18                                    bank18       00000
__Lbank19                                    bank19       00000
__Lbank2                                     bank2        00000
__Lbank20                                    bank20       00000
__Lbank21                                    bank21       00000
__Lbank22                                    bank22       00000
__Lbank23                                    bank23       00000
__Lbank24                                    bank24       00000
__Lbank25                                    bank25       00000
__Lbank26                                    bank26       00000
__Lbank27                                    bank27       00000
__Lbank28                                    bank28       00000
__Lbank29                                    bank29       00000
__Lbank3                                     bank3        00000
__Lbank30                                    bank30       00000
__Lbank31                                    bank31       00000
__Lbank4                                     bank4        00000
__Lbank5                                     bank5        00000
__Lbank6                                     bank6        00000
__Lbank7                                     bank7        00000
__Lbank8                                     bank8        00000
__Lbank9                                     bank9        00000
__Lbigram                                    bigram       00000
__LbssBANK0                                  bssBANK0     00000
__LbssCOMMON                                 bssCOMMON    00000
__Lcinit                                     cinit        00073
__Lclrtext                                   clrtext      00000
__Lcode                                      code         00000
__Lcommon                                    common       00000
__Lconfig                                    config       08007
__LcstackBANK0                               cstackBANK0  00000
__LcstackCOMMON                              cstackCOMMON 00000
__LdataBANK0                                 dataBANK0    00000
__LdataBANK1                                 dataBANK1    00000
__Leeprom_data                               eeprom_data  00000
__Lend_init                                  end_init     00071
__Lfunctab                                   functab      00000
__LidataBANK0                                idataBANK0   00000
__LidataBANK1                                idataBANK1   00000
__Lidloc                                     idloc        00000
__Linit                                      init         00071
__Linittext                                  inittext     00000
__Lintentry                                  intentry     00004
__Lmaintext                                  maintext     00000
__Lpowerup                                   powerup      00000
__Lram                                       ram          00000
__Lreset_vec                                 reset_vec    00000
__Lsfr0                                      sfr0         00000
__Lsfr1                                      sfr1         00000
__Lsfr10                                     sfr10        00000
__Lsfr11                                     sfr11        00000
__Lsfr12                                     sfr12        00000
__Lsfr13                                     sfr13        00000
__Lsfr14                                     sfr14        00000
__Lsfr15                                     sfr15        00000
__Lsfr16                                     sfr16        00000
__Lsfr17                                     sfr17        00000
__Lsfr18                                     sfr18        00000
__Lsfr19                                     sfr19        00000
__Lsfr2                                      sfr2         00000
__Lsfr20                                     sfr20        00000
__Lsfr21                                     sfr21        00000
__Lsfr22                                     sfr22        00000
__Lsfr23                                     sfr23        00000
__Lsfr24                                     sfr24        00000
__Lsfr25                                     sfr25        00000
__Lsfr26                                     sfr26        00000
__Lsfr27                                     sfr27        00000
__Lsfr28                                     sfr28        00000
__Lsfr29                                     sfr29        00000
__Lsfr3                                      sfr3         00000
__Lsfr30                                     sfr30        00000
__Lsfr31                                     sfr31        00000
__Lsfr4                                      sfr4         00000
__Lsfr5                                      sfr5         00000
__Lsfr6                                      sfr6         00000
__Lsfr7                                      sfr7         00000
__Lsfr8                                      sfr8         00000
__Lsfr9                                      sfr9         00000
__Lspace_0                                   (abs)        00000
__Lspace_1                                   (abs)        00000
__Lspace_2                                   (abs)        00000
__Lspace_3                                   (abs)        00000
__Lstack                                     stack        00000
__Lstrings                                   strings      00000
__Lstringtext                                stringtext   00000
__Ltext                                      text         00000
__S0                                         (abs)        08009
__S1                                         (abs)        000B6
__S2                                         (abs)        00000
___int_sp                                    stack        00000
___latbits                                   (abs)        00001
___sp                                        stack        00000
__date_time_ConvertByteToDate                text14       00525
__date_time_ConvertByteToDate@dateTime       cstackBANK0  00024
__date_time_ConvertByteToDate@stinrg         cstackBANK0  00020
__date_time_ConvertByteToDiscrete            text13       00404
__date_time_ConvertByteToDiscrete@dateTime   cstackBANK0  00025
__date_time_ConvertByteToDiscrete@select     cstackBANK0  00021
__date_time_ConvertByteToDiscrete@string     cstackBANK0  00020
__date_time_ConvertByteToTime                text12       00614
__date_time_ConvertByteToTime@dateTime       cstackBANK0  00023
__date_time_ConvertByteToTime@string         cstackBANK0  00020
__ds1307_GetData                             text11       00689
__ds1307_GetData@dataCount                   cstackBANK0  00025
__ds1307_GetData@date                        cstackBANK0  00024
__ds1307_GetData@length                      cstackBANK0  00021
__ds1307_GetData@ramAddress                  cstackBANK0  00020
__ds1307_SetClock                            text10       00F68
__ds1307_SetClock@date                       cstackBANK0  00021
__ds1307_SetClock@i                          cstackBANK0  00022
__end_of_CURSOR_BITMAP                       stringtext   00739
__end_of_HEX_TABLE                           stringtext   00710
__end_of_PARALLEL_LCD_ROW_SELECT             stringtext   00715
__end_of_VALUE_INFORMATIONS                  stringtext   00731
__end_of__                                   intentry     00071
__end_of__date_time_ConvertByteToDate        text14       00614
__end_of__date_time_ConvertByteToDiscrete    text13       00525
__end_of__date_time_ConvertByteToTime        text12       00689
__end_of__ds1307_GetData                     text11       006EA
__end_of__ds1307_SetClock                    text10       00FA6
__end_of__initialization                     cinit        00093
__end_of__parallel_lcd_ClearPartial          text8        00EB3
__end_of__parallel_lcd_ClearRow              text7        00ECD
__end_of__parallel_lcd_Initialize            text6        00E9A
__end_of__parallel_lcd_SetCgram              text5        00F32
__end_of__parallel_lcd_WriteCharacter        text4        00E82
__end_of__parallel_lcd_WriteString           text3        00F08
__end_of__parallel_lcd_WriteStringClearing   text2        00F68
__end_of__private_parallel_lcd_WriteByte     text9        00EEA
__end_of_initialize                          text1        00800
__end_of_main                                maintext     00404
__end_ofi1__ds1307_GetData                   text16       01000
__end_ofmain@COMPARE_UNITS                   stringtext   00713
__initialization                             cinit        00073
__parallel_lcd_ClearPartial                  text8        00E9A
__parallel_lcd_ClearPartial@i                cstackBANK0  00026
__parallel_lcd_ClearPartial@length           cstackBANK0  00023
__parallel_lcd_ClearPartial@position         cstackBANK0  00025
__parallel_lcd_ClearRow                      text7        00EB3
__parallel_lcd_ClearRow@i                    cstackBANK0  00025
__parallel_lcd_ClearRow@rowSelect            cstackBANK0  00024
__parallel_lcd_Initialize                    text6        00E82
__parallel_lcd_SetCgram                      text5        00F08
__parallel_lcd_SetCgram@bitmap               cstackBANK0  00023
__parallel_lcd_SetCgram@charCode             cstackBANK0  00026
__parallel_lcd_SetCgram@i                    cstackBANK0  00027
__parallel_lcd_WriteCharacter                text4        00E74
__parallel_lcd_WriteCharacter@character      cstackBANK0  00023
__parallel_lcd_WriteCharacter@position       cstackBANK0  00024
__parallel_lcd_WriteString                   text3        00EEA
__parallel_lcd_WriteString@position          cstackBANK0  00025
__parallel_lcd_WriteString@stringPtr         cstackBANK0  00023
__parallel_lcd_WriteStringClearing           text2        00F32
__parallel_lcd_WriteStringClearing@i         cstackBANK0  00027
__parallel_lcd_WriteStringClearing@position  cstackBANK0  00026
__parallel_lcd_WriteStringClearing@stringPtr cstackBANK0  00023
__pbssBANK0                                  bssBANK0     0004B
__pbssCOMMON                                 bssCOMMON    0007A
__pcstackBANK0                               cstackBANK0  00020
__pcstackCOMMON                              cstackCOMMON 00070
__pdataBANK0                                 dataBANK0    0006C
__pdataBANK1                                 dataBANK1    000A0
__pidataBANK0                                idataBANK0   00E64
__pidataBANK1                                idataBANK1   006EA
__pintentry                                  intentry     00004
__pmaintext                                  maintext     00096
__private_parallel_lcd_WriteByte             text9        00ECD
__private_parallel_lcd_WriteByte@data        cstackBANK0  00022
__private_parallel_lcd_WriteByte@r           cstackBANK0  00020
__pstringtext                                stringtext   00700
__pswtext1                                   swtext1      00800
__pswtext2                                   swtext2      00810
__ptext1                                     text1        007BF
__ptext10                                    text10       00F68
__ptext11                                    text11       00689
__ptext12                                    text12       00614
__ptext13                                    text13       00404
__ptext14                                    text14       00525
__ptext16                                    text16       00FA6
__ptext2                                     text2        00F32
__ptext3                                     text3        00EEA
__ptext4                                     text4        00E74
__ptext5                                     text5        00F08
__ptext6                                     text6        00E82
__ptext7                                     text7        00EB3
__ptext8                                     text8        00E9A
__ptext9                                     text9        00ECD
__size_of__                                  (abs)        00000
__size_of__date_time_ConvertByteToDate       (abs)        00000
__size_of__date_time_ConvertByteToDiscrete   (abs)        00000
__size_of__date_time_ConvertByteToTime       (abs)        00000
__size_of__ds1307_GetData                    (abs)        00000
__size_of__ds1307_SetClock                   (abs)        00000
__size_of__parallel_lcd_ClearPartial         (abs)        00000
__size_of__parallel_lcd_ClearRow             (abs)        00000
__size_of__parallel_lcd_Initialize           (abs)        00000
__size_of__parallel_lcd_SetCgram             (abs)        00000
__size_of__parallel_lcd_WriteCharacter       (abs)        00000
__size_of__parallel_lcd_WriteString          (abs)        00000
__size_of__parallel_lcd_WriteStringClearing  (abs)        00000
__size_of__private_parallel_lcd_WriteByte    (abs)        00000
__size_of_initialize                         (abs)        00000
__size_of_main                               (abs)        00000
__size_ofi1__ds1307_GetData                  (abs)        00000
_blinkPrescaler                              bssBANK0     00053
_currentEditValue                            bssBANK0     00054
_currentValueInfo                            bssBANK0     00051
_cursorPosition                              bssBANK0     00055
_dateCurrent                                 bssBANK0     0005D
_datePtr                                     bssBANK0     0006B
_dateTimer                                   bssBANK0     00064
_editSelect                                  bssBANK0     00056
_initialize                                  text1        007BF
_keyEvents_                                  bssBANK0     00057
_machineState_                               bssBANK0     00058
_main                                        maintext     00096
_menuSelect                                  bssBANK0     00059
_outputEvent                                 bssBANK0     0005A
_portAState_                                 bssBANK0     0005B
btemp                                        (abs)        0007E
clear_ram0                                   clrtext      00E6E
end_of_initialization                        cinit        00093
i1__ds1307_GetData                           text16       00FA6
i1__ds1307_GetData@dataCount                 cstackCOMMON 00075
i1__ds1307_GetData@date                      cstackCOMMON 00074
i1__ds1307_GetData@length                    cstackCOMMON 00071
i1__ds1307_GetData@ramAddress                cstackCOMMON 00070
init_ram                                     inittext     00E68
intlevel0                                    functab      00000
intlevel1                                    functab      00000
intlevel2                                    functab      00000
intlevel3                                    functab      00000
intlevel4                                    functab      00000
intlevel5                                    functab      00000
ltemp                                        (abs)        0007E
ltemp0                                       (abs)        0007E
ltemp1                                       (abs)        00082
ltemp2                                       (abs)        00086
ltemp3                                       (abs)        00080
main@COMPARE_UNITS                           stringtext   00710
main@F4265                                   dataBANK0    0006C
main@compareUnit                             cstackBANK0  00044
main@i                                       cstackBANK0  0004A
main@isNonZero                               cstackBANK0  00042
main@keyChange                               cstackBANK0  00043
main@keyPressed                              cstackBANK0  00049
main@keyReleased                             cstackBANK0  00040
main@prevPortAState                          bssBANK0     0005C
main@string                                  cstackBANK0  0002B
main@string_769                              cstackBANK0  00045
main@tmpValue                                cstackBANK0  00041
main@valueString                             cstackBANK0  0003C
reset_vec                                    reset_vec    00000
stackhi                                      (abs)        020EF
stacklo                                      (abs)        02066
start                                        init         00071
start_initialization                         cinit        00073
ttemp                                        (abs)        0007E
ttemp0                                       (abs)        0007E
ttemp1                                       (abs)        00081
ttemp2                                       (abs)        00084
ttemp3                                       (abs)        00087
ttemp4                                       (abs)        0007F
wtemp                                        (abs)        0007E
wtemp0                                       (abs)        0007E
wtemp1                                       (abs)        00080
wtemp2                                       (abs)        00082
wtemp3                                       (abs)        00084
wtemp4                                       (abs)        00086
wtemp5                                       (abs)        00088
wtemp6                                       (abs)        0007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 198 in file "src/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  compareUnit     1   36[BANK0 ] unsigned char 
  i               1   42[BANK0 ] unsigned char 
  valueString     4   28[BANK0 ] unsigned char [4]
  isNonZero       1   34[BANK0 ] unsigned char 
  tmpValue        1   33[BANK0 ] unsigned char 
  string         17   11[BANK0 ] unsigned char [17]
  string          4   37[BANK0 ] unsigned char [4]
  keyPressed      1   41[BANK0 ] struct .
  keyChange       1   35[BANK0 ] struct .
  keyReleased     1   32[BANK0 ] struct .
 Return value:  Size  Location     Type
                  2  258[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      32       0       0
      Temps:          0       3       0       0
      Totals:         0      35       0       0
Total ram usage:       35 bytes
 Hardware stack levels required when called:    4
 This function calls:
		__date_time_ConvertByteToDate
		__date_time_ConvertByteToDiscrete
		__date_time_ConvertByteToTime
		__ds1307_GetData
		__ds1307_SetClock
		__parallel_lcd_ClearPartial
		__parallel_lcd_ClearRow
		__parallel_lcd_Initialize
		__parallel_lcd_SetCgram
		__parallel_lcd_WriteCharacter
		__parallel_lcd_WriteString
		__parallel_lcd_WriteStringClearing
		_initialize
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initialize *****************
 Defined at:
		line 3 in file "src/pic16f1508_init.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_WriteStringClearing *****************
 Defined at:
		line 72 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  position        1    wreg     unsigned char 
  stringPtr       2    3[BANK0 ] PTR const unsigned char 
		 -> STR_20(17), STR_19(7), STR_18(8), STR_17(9), 
		 -> STR_16(12), STR_15(6), STR_14(7), STR_13(8), 
		 -> STR_12(9), STR_11(8), STR_10(12), STR_9(10), 
		 -> STR_8(13), 
 Auto vars:     Size  Location     Type
  position        1    6[BANK0 ] unsigned char 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_WriteString *****************
 Defined at:
		line 63 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  position        1    wreg     unsigned char 
  stringPtr       1    3[BANK0 ] PTR const unsigned char 
		 -> main@string_769(4), main@valueString(4), main@string(17), 
 Auto vars:     Size  Location     Type
  position        1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_WriteCharacter *****************
 Defined at:
		line 56 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  position        1    wreg     unsigned char 
  character       1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  position        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_SetCgram *****************
 Defined at:
		line 109 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  charCode        1    wreg     unsigned char 
  bitmap          2    3[BANK0 ] PTR const unsigned char 
		 -> CURSOR_BITMAP(8), 
 Auto vars:     Size  Location     Type
  charCode        1    6[BANK0 ] unsigned char 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_Initialize *****************
 Defined at:
		line 47 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_ClearRow *****************
 Defined at:
		line 93 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  rowSelect       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  rowSelect       1    4[BANK0 ] unsigned char 
  i               1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __parallel_lcd_ClearPartial *****************
 Defined at:
		line 101 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  position        1    wreg     unsigned char 
  length          1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  position        1    5[BANK0 ] unsigned char 
  i               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__private_parallel_lcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __private_parallel_lcd_WriteByte *****************
 Defined at:
		line 130 in file "src/../../_Common/parallel_LCD.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
  r               1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		__parallel_lcd_Initialize
		__parallel_lcd_WriteCharacter
		__parallel_lcd_WriteString
		__parallel_lcd_WriteStringClearing
		__parallel_lcd_ClearRow
		__parallel_lcd_ClearPartial
		__parallel_lcd_SetCgram
		__parallel_lcd_WriteHexNumber
 This function uses a non-reentrant model


 *************** function __ds1307_SetClock *****************
 Defined at:
		line 123 in file "src/../../_Common/ds1307.h"
 Parameters:    Size  Location     Type
  date            1    wreg     PTR struct .
		 -> dateCurrent(7), 
 Auto vars:     Size  Location     Type
  date            1    1[BANK0 ] PTR struct .
		 -> dateCurrent(7), 
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __ds1307_GetData *****************
 Defined at:
		line 74 in file "src/../../_Common/ds1307.h"
 Parameters:    Size  Location     Type
  date            1    wreg     PTR struct .
		 -> dateCurrent(7), dateTimer(7), 
  ramAddress      1    0[BANK0 ] unsigned char 
  length          1    1[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  date            1    4[BANK0 ] PTR struct .
		 -> dateCurrent(7), dateTimer(7), 
  dataCount       1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __date_time_ConvertByteToTime *****************
 Defined at:
		line 108 in file "src/../../_Common/date_time.h"
 Parameters:    Size  Location     Type
  dateTime        1    wreg     PTR struct .
		 -> NULL(0), datePtr(1), dateCurrent(7), dateTimer(7), 
  string          1    0[BANK0 ] PTR unsigned char 
		 -> main@string(17), 
 Auto vars:     Size  Location     Type
  dateTime        1    3[BANK0 ] PTR struct .
		 -> NULL(0), datePtr(1), dateCurrent(7), dateTimer(7), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __date_time_ConvertByteToDiscrete *****************
 Defined at:
		line 128 in file "src/../../_Common/date_time.h"
 Parameters:    Size  Location     Type
  dateTime        1    wreg     PTR struct .
		 -> NULL(0), datePtr(1), dateCurrent(7), dateTimer(7), 
  string          1    0[BANK0 ] PTR unsigned char 
		 -> main@string_769(4), 
  select          1    1[BANK0 ] enum E4110
 Auto vars:     Size  Location     Type
  dateTime        1    5[BANK0 ] PTR struct .
		 -> NULL(0), datePtr(1), dateCurrent(7), dateTimer(7), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       3       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __date_time_ConvertByteToDate *****************
 Defined at:
		line 80 in file "src/../../_Common/date_time.h"
 Parameters:    Size  Location     Type
  dateTime        1    wreg     PTR struct .
		 -> NULL(0), datePtr(1), dateCurrent(7), dateTimer(7), 
  stinrg          1    0[BANK0 ] PTR unsigned char 
		 -> main@string(17), 
 Auto vars:     Size  Location     Type
  dateTime        1    4[BANK0 ] PTR struct .
		 -> NULL(0), datePtr(1), dateCurrent(7), dateTimer(7), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       3       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __ *****************
 Defined at:
		line 591 in file "src/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    9[COMMON] unsigned char 
  isTimeToAler    1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1__ds1307_GetData
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1__ds1307_GetData *****************
 Defined at:
		line 74 in file "src/../../_Common/ds1307.h"
 Parameters:    Size  Location     Type
  date            1    wreg     PTR struct .
		 -> dateCurrent(7), dateTimer(7), 
  ramAddress      1    0[COMMON] unsigned char 
  length          1    1[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  date            1    4[COMMON] PTR struct .
		 -> dateCurrent(7), dateTimer(7), 
  _ds1307_GetD    1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		__
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
src/../../_Common/date_time.h
		__date_time_Con		CODE           	0525	0000	240
		__date_time_Con		CODE           	0614	0000	118
		__date_time_Con		CODE           	0404	0000	290

src/../../_Common/date_time.h estimated size: 648

src/../../_Common/ds1307.h
		__ds1307_GetDat		CODE           	0689	0000	98
		__ds1307_SetClo		CODE           	0F68	0000	63

src/../../_Common/ds1307.h estimated size: 161

src/pic16f1508_init.h
		_initialize    		CODE           	07BF	0000	66

src/pic16f1508_init.h estimated size: 66

src/main.c
		__             		CODE           	0004	0000	110
		_main          		CODE           	0096	0000	879

src/main.c estimated size: 989

src/../../_Common/parallel_LCD.h
		__parallel_lcd_		CODE           	0E74	0000	15
		__parallel_lcd_		CODE           	0EEA	0000	31
		__parallel_lcd_		CODE           	0E9A	0000	26
		__parallel_lcd_		CODE           	0F32	0000	55
		__private_paral		CODE           	0ECD	0000	30
		__parallel_lcd_		CODE           	0F08	0000	43
		__parallel_lcd_		CODE           	0E82	0000	25
		__parallel_lcd_		CODE           	0EB3	0000	27

src/../../_Common/parallel_LCD.h estimated size: 252

shared
		_PARALLEL_LCD_R		STRCODE        	0713	0000	3
		main@COMPARE_UN		STRCODE        	0710	0000	4
		_VALUE_INFORMAT		STRCODE        	0715	0000	29
		i1__ds1307_GetD		CODE           	0FA6	0000	91
		_HEX_TABLE     		STRCODE        	0700	0000	17
		__initializatio		CODE           	0073	0000	33
		_CURSOR_BITMAP 		STRCODE        	0731	0000	9

shared estimated size: 186

