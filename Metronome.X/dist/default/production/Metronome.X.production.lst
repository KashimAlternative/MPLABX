

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Aug 12 09:29:38 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0094                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011A                     	;# 
    80  011B                     	;# 
    81  011D                     	;# 
    82  011E                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0199                     	;# 
    95  019A                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019C                     	;# 
   101  019C                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019F                     	;# 
   105  020C                     	;# 
   106  020D                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0217                     	;# 
   122  0219                     	;# 
   123  021A                     	;# 
   124  021B                     	;# 
   125  021C                     	;# 
   126  021D                     	;# 
   127  021E                     	;# 
   128  021F                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0298                     	;# 
   138  0298                     	;# 
   139  0299                     	;# 
   140  029A                     	;# 
   141  029B                     	;# 
   142  029C                     	;# 
   143  029C                     	;# 
   144  029D                     	;# 
   145  029E                     	;# 
   146  029E                     	;# 
   147  0311                     	;# 
   148  0311                     	;# 
   149  0312                     	;# 
   150  0313                     	;# 
   151  0318                     	;# 
   152  0318                     	;# 
   153  0319                     	;# 
   154  031A                     	;# 
   155  0394                     	;# 
   156  0395                     	;# 
   157  0396                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0415                     	;# 
   164  0416                     	;# 
   165  0417                     	;# 
   166  041C                     	;# 
   167  041D                     	;# 
   168  041E                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180                           
   181                           	psect	idataBANK0
   182  0436                     __pidataBANK0:	
   183                           
   184                           ;initializer for _displayBuffer
   185  0436  340A               	retlw	10
   186  0437  340A               	retlw	10
   187  0438  340A               	retlw	10
   188  0439  340A               	retlw	10
   189                           
   190                           ;initializer for _config
   191  043A  3478               	retlw	120
   192  043B  3400               	retlw	0
   193  043C  3420               	retlw	32
   194  043D  3400               	retlw	0
   195                           
   196                           	psect	stringtext
   197  0400                     __pstringtext:	
   198  0400                     _SEGMENT_BIT:	
   199  0400  34FC               	retlw	252
   200  0401  3460               	retlw	96
   201  0402  34DA               	retlw	218
   202  0403  34F2               	retlw	242
   203  0404  3466               	retlw	102
   204  0405  34B6               	retlw	182
   205  0406  34BE               	retlw	190
   206  0407  34E4               	retlw	228
   207  0408  34FE               	retlw	254
   208  0409  34F6               	retlw	246
   209  040A  3400               	retlw	0
   210  040B                     __end_of_SEGMENT_BIT:	
   211  040B                     main@COMPARE_UNITS:	
   212  040B  34E8               	retlw	232
   213  040C  3403               	retlw	3
   214  040D  3464               	retlw	100
   215  040E  3400               	retlw	0
   216  040F  340A               	retlw	10
   217  0410  3400               	retlw	0
   218  0411  3401               	retlw	1
   219  0412  3400               	retlw	0
   220  0413                     __end_ofmain@COMPARE_UNITS:	
   221  0413                     _SEGMET_BIT2:	
   222  0413  340E               	retlw	14
   223  0414  340D               	retlw	13
   224  0415  340B               	retlw	11
   225  0416  3407               	retlw	7
   226  0417                     __end_of_SEGMET_BIT2:	
   227  000B                     _INTCON	set	11
   228  000B                     _INTCONbits	set	11
   229  0012                     _PIR2bits	set	18
   230  0013                     _PIR3bits	set	19
   231  000C                     _PORTA	set	12
   232  001B                     _PR2	set	27
   233  001C                     _T2CONbits	set	28
   234  0015                     _TMR0	set	21
   235  001A                     _TMR2	set	26
   236  005D                     _TMR0IE	set	93
   237  005A                     _TMR0IF	set	90
   238  0089                     _TMR2IF	set	137
   239  00E2                     _TMR2ON	set	226
   240  0099                     _TMR4IF	set	153
   241  009B                     _TMR6IF	set	155
   242  0099                     _OSCCONbits	set	153
   243  0098                     _OSCTUNE	set	152
   244  0093                     _PIE3bits	set	147
   245  008C                     _TRISA	set	140
   246  008D                     _TRISB	set	141
   247  04AB                     _PSA	set	1195
   248  04AD                     _TMR0CS	set	1197
   249  04AC                     _TMR0SE	set	1196
   250  0489                     _TMR2IE	set	1161
   251  0499                     _TMR4IE	set	1177
   252  049B                     _TMR6IE	set	1179
   253  010C                     _LATA	set	268
   254  010D                     _LATB	set	269
   255  08EB                     _CCP2SEL	set	2283
   256  018C                     _ANSELA	set	396
   257  018D                     _ANSELB	set	397
   258  0192                     _EEADRH	set	402
   259  0191                     _EEADRL	set	401
   260  0195                     _EECON1bits	set	405
   261  0196                     _EECON2	set	406
   262  0194                     _EEDATH	set	404
   263  0193                     _EEDATL	set	403
   264  029A                     _CCP2CON	set	666
   265  0299                     _CCPR2H	set	665
   266  0298                     _CCPR2L	set	664
   267  029E                     _CCPTMRS	set	670
   268  029D                     _PSTR2CON	set	669
   269  0416                     _PR4	set	1046
   270  041D                     _PR6	set	1053
   271  0417                     _T4CON	set	1047
   272  041E                     _T6CONbits	set	1054
   273  0415                     _TMR4	set	1045
   274  041C                     _TMR6	set	1052
   275  20BA                     _TMR4ON	set	8378
   276  20F2                     _TMR6ON	set	8434
   277                           
   278                           ; #config settings
   279  0000                     
   280                           	psect	cinit
   281  00EB                     start_initialization:	
   282  00EB                     __initialization:	
   283                           
   284                           ; Clear objects allocated to COMMON
   285  00EB  01F7               	clrf	__pbssCOMMON& (0+127)
   286  00EC  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   287  00ED  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   288                           
   289                           ; Clear objects allocated to BANK0
   290  00EE  3032               	movlw	low __pbssBANK0
   291  00EF  0084               	movwf	4
   292  00F0  3000               	movlw	high __pbssBANK0
   293  00F1  0085               	movwf	5
   294  00F2  3010               	movlw	16
   295  00F3  3184  243E  3180   	fcall	clear_ram0
   296                           
   297                           ; Initialize objects allocated to BANK0
   298  00F6  3036               	movlw	low __pidataBANK0
   299  00F7  0084               	movwf	4
   300  00F8  3084               	movlw	(high __pidataBANK0)| (0+128)
   301  00F9  0085               	movwf	5
   302  00FA  3042               	movlw	low __pdataBANK0
   303  00FB  0086               	movwf	6
   304  00FC  3000               	movlw	high __pdataBANK0
   305  00FD  0087               	movwf	7
   306  00FE  3008               	movlw	8
   307  00FF  3184  2444         	fcall	init_ram
   308  0101                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311  0101                     __end_of__initialization:	
   312  0101  0020               	movlb	0
   313  0102  3181  2904         	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMMON
   316  0077                     __pbssCOMMON:	
   317  0077                     __@interruptCount:	
   318  0077                     	ds	2
   319  0079                     _displayDigit:	
   320  0079                     	ds	1
   321                           
   322                           	psect	bssBANK0
   323  0032                     __pbssBANK0:	
   324  0032                     _keyCount:	
   325  0032                     	ds	3
   326  0035                     _tempoCounter:	
   327  0035                     	ds	3
   328  0038                     _autoHideCounter_:	
   329  0038                     	ds	2
   330  003A                     _durationCounter_:	
   331  003A                     	ds	2
   332  003C                     _beatCounter:	
   333  003C                     	ds	1
   334  003D                     _events_:	
   335  003D                     	ds	1
   336  003E                     _inputEvents_:	
   337  003E                     	ds	1
   338  003F                     _machineState:	
   339  003F                     	ds	1
   340  0040                     _portAState_:	
   341  0040                     	ds	1
   342  0041                     main@prevPortAState:	
   343  0041                     	ds	1
   344                           
   345                           	psect	dataBANK0
   346  0042                     __pdataBANK0:	
   347  0042                     _displayBuffer:	
   348  0042                     	ds	4
   349  0046                     _config:	
   350  0046                     	ds	4
   351                           
   352                           	psect	clrtext
   353  043E                     clear_ram0:	
   354                           ;	Called with FSR0 containing the base address, and
   355                           ;	WREG with the size to clear
   356                           
   357  043E  0064               	clrwdt	;clear the watchdog before getting into this loop
   358  043F                     clrloop0:	
   359  043F  0180               	clrf	0	;clear RAM location pointed to by FSR
   360  0440  3101               	addfsr 0,1
   361  0441  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   362  0442  2C3F               	goto	clrloop0	;have we reached the end yet?
   363  0443  3400               	retlw	0	;all done for this memory range, return
   364                           
   365                           	psect	inittext
   366  0444                     init_ram:	
   367  0444  00FE               	movwf	126
   368  0445                     initloop:	
   369  0445  0012               	moviw fsr0++
   370  0446  001E               	movwi fsr1++
   371  0447  0BFE               	decfsz	126,f
   372  0448  2C45               	goto	initloop
   373  0449  3400               	retlw	0
   374                           
   375                           	psect	cstackCOMMON
   376  0070                     __pcstackCOMMON:	
   377  0070                     ?_initialize:	
   378  0070                     ?__configuration_Save:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?__configuration_Load:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?__:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ??__:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?__private_ReadByte:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?_main:	
   394                           ; 1 bytes @ 0x0
   395                           
   396                           
   397                           ; 2 bytes @ 0x0
   398  0070                     	ds	4
   399  0074                     ??__private_ReadByte:	
   400  0074                     ?__private_WriteByte:	
   401                           ; 0 bytes @ 0x4
   402                           
   403  0074                     ??_initialize:	
   404                           ; 0 bytes @ 0x4
   405                           
   406  0074                     __private_WriteByte@data:	
   407                           ; 0 bytes @ 0x4
   408                           
   409  0074                     __private_ReadByte@address:	
   410                           ; 1 bytes @ 0x4
   411                           
   412                           
   413                           ; 1 bytes @ 0x4
   414  0074                     	ds	1
   415  0075                     ??__private_WriteByte:	
   416  0075                     ??__configuration_Load:	
   417                           ; 0 bytes @ 0x5
   418                           
   419  0075                     __private_WriteByte@address:	
   420                           ; 0 bytes @ 0x5
   421                           
   422                           
   423                           ; 1 bytes @ 0x5
   424  0075                     	ds	1
   425  0076                     ??__configuration_Save:	
   426                           
   427                           ; 0 bytes @ 0x6
   428  0076                     	ds	1
   429                           
   430                           	psect	cstackBANK0
   431  0020                     __pcstackBANK0:	
   432  0020                     __configuration_Save@saveIntcon:	
   433  0020                     __configuration_Load@config:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 1 bytes @ 0x0
   438  0020                     	ds	1
   439  0021                     __configuration_Save@ptrConfig:	
   440  0021                     __configuration_Load@ptrConfig:	
   441                           ; 1 bytes @ 0x1
   442                           
   443                           
   444                           ; 1 bytes @ 0x1
   445  0021                     	ds	1
   446  0022                     __configuration_Save@isPositionChanged:	
   447  0022                     __configuration_Load@romPosition:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 1 bytes @ 0x2
   452  0022                     	ds	1
   453  0023                     __configuration_Save@config:	
   454  0023                     __configuration_Load@i:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 1 bytes @ 0x3
   459  0023                     	ds	1
   460  0024                     __configuration_Save@i:	
   461                           
   462                           ; 1 bytes @ 0x4
   463  0024                     	ds	1
   464  0025                     __configuration_Save@romPosition:	
   465                           
   466                           ; 1 bytes @ 0x5
   467  0025                     	ds	1
   468  0026                     ??_main:	
   469                           
   470                           ; 0 bytes @ 0x6
   471  0026                     	ds	3
   472  0029                     main@isNonZero:	
   473                           
   474                           ; 1 bytes @ 0x9
   475  0029                     	ds	1
   476  002A                     main@tmpValue:	
   477                           
   478                           ; 2 bytes @ 0xA
   479  002A                     	ds	2
   480  002C                     main@displayNumber:	
   481                           
   482                           ; 1 bytes @ 0xC
   483  002C                     	ds	1
   484  002D                     main@compareUnit:	
   485                           
   486                           ; 2 bytes @ 0xD
   487  002D                     	ds	2
   488  002F                     main@keyPressed:	
   489                           
   490                           ; 1 bytes @ 0xF
   491  002F                     	ds	1
   492  0030                     main@i_490:	
   493                           
   494                           ; 1 bytes @ 0x10
   495  0030                     	ds	1
   496  0031                     main@i:	
   497                           
   498                           ; 1 bytes @ 0x11
   499  0031                     	ds	1
   500                           
   501                           	psect	maintext
   502  0104                     __pmaintext:	
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 124 in file "src/main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  compareUnit     2   13[BANK0 ] unsigned int 
   513 ;;  i               1   16[BANK0 ] unsigned char 
   514 ;;  i               1   17[BANK0 ] unsigned char 
   515 ;;  tmpValue        2   10[BANK0 ] unsigned int 
   516 ;;  displayNumbe    1   12[BANK0 ] unsigned char 
   517 ;;  isNonZero       1    9[BANK0 ] enum E2769
   518 ;;  keyPressed      1   15[BANK0 ] struct .
   519 ;; Return value:  Size  Location     Type
   520 ;;                  2  164[None  ] int 
   521 ;; Registers used:
   522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : B1F/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   528 ;;      Params:         0       0       0       0       0       0
   529 ;;      Locals:         0       9       0       0       0       0
   530 ;;      Temps:          0       3       0       0       0       0
   531 ;;      Totals:         0      12       0       0       0       0
   532 ;;Total ram usage:       12 bytes
   533 ;; Hardware stack levels required when called:    3
   534 ;; This function calls:
   535 ;;		__configuration_Load
   536 ;;		__configuration_Save
   537 ;;		_initialize
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _main
   545  0104                     _main:	
   546                           
   547                           ;main.c: 126: initialize( ) ;
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   551  0104  3182  22C0  3181   	fcall	_initialize
   552                           
   553                           ;main.c: 128: _configuration_Load( &config ) ;
   554  0107  3046               	movlw	(low (_config| 0))& (0+255)
   555  0108  3183  2308  3181   	fcall	__configuration_Load
   556                           
   557                           ;main.c: 130: machineState = STATE_METRONOME ;
   558  010B  0020               	movlb	0	; select bank0
   559  010C  01BF               	clrf	_machineState
   560                           
   561                           ;main.c: 132: events_.resetMetronome = 1; ;
   562  010D  14BD               	bsf	_events_,1
   563                           
   564                           ;main.c: 135: PIE3bits.TMR6IE = 1 ;
   565  010E  0021               	movlb	1	; select bank1
   566  010F  1593               	bsf	19,3	;volatile
   567                           
   568                           ;main.c: 136: PIR3bits.TMR6IF = 0 ;
   569  0110  0020               	movlb	0	; select bank0
   570  0111  1193               	bcf	19,3	;volatile
   571                           
   572                           ;main.c: 137: T6CONbits.TMR6ON = 1 ;
   573  0112  0028               	movlb	8	; select bank8
   574  0113  151E               	bsf	30,2	;volatile
   575                           
   576                           ;main.c: 138: INTCONbits.PEIE = 1 ;
   577  0114  170B               	bsf	11,6	;volatile
   578                           
   579                           ;main.c: 139: INTCONbits.GIE = 1 ;
   580  0115  178B               	bsf	11,7	;volatile
   581  0116                     l165:	
   582                           ;main.c: 141: for( ; ; ) {
   583                           
   584  0116  0064               	clrwdt	;# 
   585                           
   586                           ;main.c: 147: static UniPortA prevPortAState = { 0x00 } ;
   587                           ;main.c: 148: UniPortA keyPressed ;
   588                           ;main.c: 150: keyPressed.byte = ( portAState_.byte ^ prevPortAState.byte ) & portAState_
      +                          .byte ;
   589  0117  0020               	movlb	0	; select bank0
   590  0118  0840               	movf	_portAState_,w
   591  0119  0641               	xorwf	main@prevPortAState,w
   592  011A  0540               	andwf	_portAState_,w
   593  011B  00A6               	movwf	??_main
   594  011C  0826               	movf	??_main,w
   595  011D  00AF               	movwf	main@keyPressed
   596                           
   597                           ;main.c: 151: prevPortAState.byte = portAState_.byte ;
   598  011E  0840               	movf	_portAState_,w
   599  011F  00A6               	movwf	??_main
   600  0120  0826               	movf	??_main,w
   601  0121  00C1               	movwf	main@prevPortAState
   602                           
   603                           ;main.c: 153: if( keyPressed.keyCenter ) {
   604  0122  1AAF               	btfsc	main@keyPressed,5
   605                           
   606                           ;main.c: 154: inputEvents_.keyPressCenter = 1; ;
   607  0123  163E               	bsf	_inputEvents_,4
   608                           
   609                           ;main.c: 155: }
   610                           ;main.c: 157: if( keyPressed.keyUp || (inputEvents_.keyPressHeldUp&&!(inputEvents_.keyPr
      +                          essHeldUp=0)) ) {
   611  0124  1B2F               	btfsc	main@keyPressed,6
   612  0125  2929               	goto	l171
   613  0126  1CBE               	btfss	_inputEvents_,1
   614  0127  292A               	goto	l169
   615  0128  10BE               	bcf	_inputEvents_,1
   616  0129                     l171:	
   617                           
   618                           ;main.c: 158: inputEvents_.keyPressUp = 1; ;
   619  0129  143E               	bsf	_inputEvents_,0
   620  012A                     l169:	
   621                           
   622                           ;main.c: 159: }
   623                           ;main.c: 161: if( keyPressed.keyDown || (inputEvents_.keyPressHeldDown&&!(inputEvents_.k
      +                          eyPressHeldDown=0)) ) {
   624  012A  1A2F               	btfsc	main@keyPressed,4
   625  012B  292F               	goto	l174
   626  012C  1DBE               	btfss	_inputEvents_,3
   627  012D  2930               	goto	l1751
   628  012E  11BE               	bcf	_inputEvents_,3
   629  012F                     l174:	
   630                           
   631                           ;main.c: 162: inputEvents_.keyPressDown = 1; ;
   632  012F  153E               	bsf	_inputEvents_,2
   633  0130                     l1751:	
   634                           
   635                           ;main.c: 163: }
   636                           ;main.c: 165: if( inputEvents_.all ) {
   637  0130  083E               	movf	_inputEvents_,w
   638  0131  1D03               	btfss	3,2
   639                           
   640                           ;main.c: 166: events_.soundOnKey = 1; ;
   641  0132  15BD               	bsf	_events_,3
   642                           
   643                           ;main.c: 167: }
   644                           ;main.c: 170: if( (inputEvents_.keyPressCenter&&!(inputEvents_.keyPressCenter=0)) ) {
   645  0133  1A3E               	btfsc	_inputEvents_,4
   646  0134  123E               	bcf	_inputEvents_,4
   647                           
   648                           ;main.c: 172: }
   649                           ;main.c: 175: if( (inputEvents_.keyPressHeldCenter&&!(inputEvents_.keyPressHeldCenter=0)
      +                          ) ) {
   650  0135  1EBE               	btfss	_inputEvents_,5
   651  0136  2971               	goto	l1799
   652  0137  12BE               	bcf	_inputEvents_,5
   653                           
   654                           ;main.c: 176: INTCONbits.GIE=0 ;
   655  0138  138B               	bcf	11,7	;volatile
   656                           
   657                           ;main.c: 177: _configuration_Save( &config ) ;
   658  0139  3046               	movlw	(low (_config| 0))& (0+255)
   659  013A  3182  2257  3181   	fcall	__configuration_Save
   660  013D  0001               	reset	;# 
   661                           
   662                           ;main.c: 179: }
   663                           ;main.c: 182: switch( machineState ) {
   664  013E  2971               	goto	l1799
   665  013F                     l179:	
   666                           ;main.c: 184: case STATE_METRONOME:
   667                           
   668                           
   669                           ;main.c: 185: if( (inputEvents_.keyPressUp&&!(inputEvents_.keyPressUp=0)) && config.temp
      +                          o != 9999 ) {
   670  013F  1C3E               	btfss	_inputEvents_,0
   671  0140  294F               	goto	l1771
   672  0141  103E               	bcf	_inputEvents_,0
   673  0142  300F               	movlw	15
   674  0143  0646               	xorwf	_config,w
   675  0144  3027               	movlw	39
   676  0145  1903               	skipnz
   677  0146  0647               	xorwf	_config+1,w
   678  0147  1903               	btfsc	3,2
   679  0148  294F               	goto	l1771
   680                           
   681                           ;main.c: 186: config.tempo++ ;
   682  0149  3001               	movlw	1
   683  014A  07C6               	addwf	_config,f
   684  014B  3000               	movlw	0
   685  014C  3DC7               	addwfc	_config+1,f
   686                           
   687                           ;main.c: 187: events_.changeValue = 1; ;
   688  014D  143D               	bsf	_events_,0
   689                           
   690                           ;main.c: 188: events_.resetMetronome = 1; ;
   691  014E  14BD               	bsf	_events_,1
   692  014F                     l1771:	
   693                           
   694                           ;main.c: 189: }
   695                           ;main.c: 190: if( (inputEvents_.keyPressDown&&!(inputEvents_.keyPressDown=0)) && config.
      +                          tempo != 0 ) {
   696  014F  1D3E               	btfss	_inputEvents_,2
   697  0150  297A               	goto	l182
   698  0151  113E               	bcf	_inputEvents_,2
   699  0152  0846               	movf	_config,w
   700  0153  0447               	iorwf	_config+1,w
   701  0154  1903               	btfsc	3,2
   702  0155  297A               	goto	l182
   703                           
   704                           ;main.c: 191: config.tempo-- ;
   705  0156  3001               	movlw	1
   706  0157  02C6               	subwf	_config,f
   707  0158  3000               	movlw	0
   708  0159  3BC7               	subwfb	_config+1,f
   709                           
   710                           ;main.c: 192: events_.changeValue = 1; ;
   711  015A  143D               	bsf	_events_,0
   712                           
   713                           ;main.c: 193: events_.resetMetronome = 1; ;
   714  015B  14BD               	bsf	_events_,1
   715                           
   716                           ;main.c: 194: }
   717                           ;main.c: 195: break ;
   718  015C  297A               	goto	l182
   719  015D                     l183:	
   720                           ;main.c: 198: case STATE_TUNE:
   721                           
   722                           
   723                           ;main.c: 199: if( (inputEvents_.keyPressUp&&!(inputEvents_.keyPressUp=0)) && config.osci
      +                          llatorTune != 63 ) config.oscillatorTune++ ;
   724  015D  1C3E               	btfss	_inputEvents_,0
   725  015E  2968               	goto	l1789
   726  015F  103E               	bcf	_inputEvents_,0
   727  0160  303F               	movlw	63
   728  0161  0648               	xorwf	_config+2,w
   729  0162  1903               	btfsc	3,2
   730  0163  2968               	goto	l1789
   731  0164  3001               	movlw	1
   732  0165  00A6               	movwf	??_main
   733  0166  0826               	movf	??_main,w
   734  0167  07C8               	addwf	_config+2,f
   735  0168                     l1789:	
   736                           
   737                           ;main.c: 200: if( (inputEvents_.keyPressDown&&!(inputEvents_.keyPressDown=0)) && config.
      +                          oscillatorTune != 0 ) config.oscillatorTune-- ;
   738  0168  1D3E               	btfss	_inputEvents_,2
   739  0169  297A               	goto	l182
   740  016A  113E               	bcf	_inputEvents_,2
   741  016B  0848               	movf	_config+2,w
   742  016C  1903               	btfsc	3,2
   743  016D  297A               	goto	l182
   744  016E  3001               	movlw	1
   745  016F  02C8               	subwf	_config+2,f
   746                           
   747                           ;main.c: 202: }
   748                           
   749                           ;main.c: 201: break ;
   750  0170  297A               	goto	l182
   751  0171                     l1799:	
   752  0171  0020               	movlb	0	; select bank0
   753  0172  083F               	movf	_machineState,w
   754                           
   755                           ; Switch size 1, requested type "space"
   756                           ; Number of cases is 2, Range of values is 0 to 1
   757                           ; switch strategies available:
   758                           ; Name         Instructions Cycles
   759                           ; simple_byte            7     4 (average)
   760                           ; direct_byte           10     6 (fixed)
   761                           ; jumptable            260     6 (fixed)
   762                           ;	Chosen strategy is simple_byte
   763  0173  3A00               	xorlw	0	; case 0
   764  0174  1903               	skipnz
   765  0175  293F               	goto	l179
   766  0176  3A01               	xorlw	1	; case 1
   767  0177  1903               	skipnz
   768  0178  295D               	goto	l183
   769  0179  297A               	goto	l182
   770  017A                     l182:	
   771                           
   772                           ;main.c: 205: if( (events_.resetMetronome&&!(events_.resetMetronome=0)) ) {
   773  017A  1CBD               	btfss	_events_,1
   774  017B  2986               	goto	l1811
   775  017C  10BD               	bcf	_events_,1
   776                           
   777                           ;main.c: 206: tempoCounter = 0 ;
   778  017D  3000               	movlw	0
   779  017E  00B5               	movwf	_tempoCounter
   780  017F  3000               	movlw	0
   781  0180  00B6               	movwf	_tempoCounter+1
   782  0181  3000               	movlw	0
   783  0182  00B7               	movwf	_tempoCounter+2
   784                           
   785                           ;main.c: 207: beatCounter.all = 0 ;
   786  0183  01BC               	clrf	_beatCounter
   787                           
   788                           ;main.c: 208: events_.soundOn = 1; ;
   789  0184  153D               	bsf	_events_,2
   790                           
   791                           ;main.c: 209: events_.changeValue = 1; ;
   792  0185  143D               	bsf	_events_,0
   793  0186                     l1811:	
   794                           
   795                           ;main.c: 210: }
   796                           ;main.c: 213: if( (events_.changeValue&&!(events_.changeValue=0)) ) {
   797  0186  1C3D               	btfss	_events_,0
   798  0187  2A49               	goto	l1905
   799  0188  103D               	bcf	_events_,0
   800                           
   801                           ;main.c: 215: autoHideCounter_ = 0x1000 ;
   802  0189  3000               	movlw	0
   803  018A  00B8               	movwf	_autoHideCounter_
   804  018B  3010               	movlw	16
   805  018C  00B9               	movwf	_autoHideCounter_+1
   806                           
   807                           ;main.c: 218: uint16_t tmpValue ;
   808                           ;main.c: 219: switch( machineState ) {
   809  018D  299B               	goto	l1823
   810  018E                     l1817:	
   811                           ;main.c: 220: case STATE_METRONOME:
   812                           
   813                           
   814                           ;main.c: 221: tmpValue = config.tempo ;
   815  018E  0847               	movf	_config+1,w
   816  018F  00AB               	movwf	main@tmpValue+1
   817  0190  0846               	movf	_config,w
   818  0191  00AA               	movwf	main@tmpValue
   819                           
   820                           ;main.c: 222: break ;
   821  0192  29A3               	goto	l1825
   822  0193                     l1819:	
   823                           ;main.c: 225: case STATE_TUNE:
   824                           
   825                           
   826                           ;main.c: 226: tmpValue = config.oscillatorTune ;
   827  0193  0848               	movf	_config+2,w
   828  0194  00A6               	movwf	??_main
   829  0195  01A7               	clrf	??_main+1
   830  0196  0826               	movf	??_main,w
   831  0197  00AA               	movwf	main@tmpValue
   832  0198  0827               	movf	??_main+1,w
   833  0199  00AB               	movwf	main@tmpValue+1
   834                           
   835                           ;main.c: 229: }
   836                           
   837                           ;main.c: 227: break ;
   838  019A  29A3               	goto	l1825
   839  019B                     l1823:	
   840  019B  083F               	movf	_machineState,w
   841                           
   842                           ; Switch size 1, requested type "space"
   843                           ; Number of cases is 2, Range of values is 0 to 1
   844                           ; switch strategies available:
   845                           ; Name         Instructions Cycles
   846                           ; simple_byte            7     4 (average)
   847                           ; direct_byte           10     6 (fixed)
   848                           ; jumptable            260     6 (fixed)
   849                           ;	Chosen strategy is simple_byte
   850  019C  3A00               	xorlw	0	; case 0
   851  019D  1903               	skipnz
   852  019E  298E               	goto	l1817
   853  019F  3A01               	xorlw	1	; case 1
   854  01A0  1903               	skipnz
   855  01A1  2993               	goto	l1819
   856  01A2  29A3               	goto	l1825
   857  01A3                     l1825:	
   858                           
   859                           ;main.c: 231: static const uint16_t COMPARE_UNITS[] = { 1000 , 100 , 10 , 1 } ;
   860                           ;main.c: 233: uint08_t displayNumber = 0 ;
   861  01A3  01AC               	clrf	main@displayNumber
   862                           
   863                           ;main.c: 235: Bool_t isNonZero = BOOL_FALSE ;
   864  01A4  01A9               	clrf	main@isNonZero
   865                           
   866                           ;main.c: 236: for( uint08_t i = 0 ; i < 4 ; i++ ) {
   867  01A5  01B1               	clrf	main@i
   868  01A6                     L3:	
   869  01A6  3004               	movlw	4
   870  01A7  0231               	subwf	main@i,w
   871  01A8  1803               	btfsc	3,0
   872  01A9  2A49               	goto	l1905
   873                           
   874                           ;main.c: 237: displayNumber = 0 ;
   875  01AA  01AC               	clrf	main@displayNumber
   876                           
   877                           ;main.c: 238: uint16_t compareUnit = COMPARE_UNITS[i] ;
   878  01AB  0831               	movf	main@i,w
   879  01AC  00A6               	movwf	??_main
   880  01AD  01A7               	clrf	??_main+1
   881  01AE  35A6               	lslf	??_main,f
   882  01AF  0DA7               	rlf	??_main+1,f
   883  01B0  300B               	movlw	low (main@COMPARE_UNITS| (0+32768))
   884  01B1  0726               	addwf	??_main,w
   885  01B2  0084               	movwf	4
   886  01B3  3084               	movlw	high (main@COMPARE_UNITS| (0+32768))
   887  01B4  3D27               	addwfc	??_main+1,w
   888  01B5  0085               	movwf	5
   889  01B6  3F00               	moviw [0]fsr0
   890  01B7  00AD               	movwf	main@compareUnit
   891  01B8  3F01               	moviw [1]fsr0
   892  01B9  00AE               	movwf	main@compareUnit+1
   893  01BA                     l1841:	
   894                           ;main.c: 239: while( tmpValue >= compareUnit ) {
   895                           
   896  01BA  082E               	movf	main@compareUnit+1,w
   897  01BB  022B               	subwf	main@tmpValue+1,w
   898  01BC  1D03               	skipz
   899  01BD  29C0               	goto	u1525
   900  01BE  082D               	movf	main@compareUnit,w
   901  01BF  022A               	subwf	main@tmpValue,w
   902  01C0                     u1525:	
   903  01C0  1C03               	btfss	3,0
   904  01C1  29CD               	goto	l1843
   905                           
   906                           ;main.c: 240: tmpValue -= compareUnit ;
   907  01C2  082D               	movf	main@compareUnit,w
   908  01C3  02AA               	subwf	main@tmpValue,f
   909  01C4  082E               	movf	main@compareUnit+1,w
   910  01C5  3BAB               	subwfb	main@tmpValue+1,f
   911                           
   912                           ;main.c: 241: displayNumber++ ;
   913  01C6  3001               	movlw	1
   914  01C7  00A6               	movwf	??_main
   915  01C8  0826               	movf	??_main,w
   916  01C9  07AC               	addwf	main@displayNumber,f
   917                           
   918                           ;main.c: 242: isNonZero = BOOL_TRUE ;
   919  01CA  01A9               	clrf	main@isNonZero
   920  01CB  0AA9               	incf	main@isNonZero,f
   921  01CC  29BA               	goto	l1841
   922  01CD                     l1843:	
   923                           
   924                           ;main.c: 243: }
   925                           ;main.c: 245: if( isNonZero )
   926  01CD  0829               	movf	main@isNonZero,w
   927  01CE  1903               	btfsc	3,2
   928  01CF  29E0               	goto	l1847
   929                           
   930                           ;main.c: 246: displayBuffer[i] = SEGMENT_BIT[ displayNumber ] ;
   931  01D0  082C               	movf	main@displayNumber,w
   932  01D1  3E00               	addlw	low (_SEGMENT_BIT| (0+32768))
   933  01D2  0084               	movwf	4
   934  01D3  3084               	movlw	high (_SEGMENT_BIT| (0+32768))
   935  01D4  1803               	skipnc
   936  01D5  3E01               	addlw	1
   937  01D6  0085               	movwf	5
   938  01D7  0800               	movf	0,w	;code access
   939  01D8  00A6               	movwf	??_main
   940  01D9  0831               	movf	main@i,w
   941  01DA  3E42               	addlw	(low (_displayBuffer| 0))& (0+255)
   942  01DB  0086               	movwf	6
   943  01DC  0187               	clrf	7
   944  01DD  0826               	movf	??_main,w
   945  01DE  0081               	movwf	1
   946  01DF  29E5               	goto	l1849
   947  01E0                     l1847:	
   948                           
   949                           ;main.c: 247: else
   950                           ;main.c: 248: displayBuffer[i] = 0x00 ;
   951  01E0  0831               	movf	main@i,w
   952  01E1  3E42               	addlw	(low (_displayBuffer| 0))& (0+255)
   953  01E2  0086               	movwf	6
   954  01E3  0187               	clrf	7
   955  01E4  0181               	clrf	1
   956  01E5                     l1849:	
   957  01E5  3001               	movlw	1
   958  01E6  00A6               	movwf	??_main
   959  01E7  0826               	movf	??_main,w
   960  01E8  07B1               	addwf	main@i,f
   961  01E9  29A6               	goto	L3
   962  01EA                     l1853:	
   963                           ;main.c: 256: case STATE_TUNE:
   964                           
   965                           ;main.c: 249: }
   966                           ;main.c: 251: }
   967                           ;main.c: 254: switch( machineState ) {
   968                           
   969                           
   970                           ;main.c: 257: OSCTUNE = config.oscillatorTune - 32 ;
   971  01EA  0848               	movf	_config+2,w
   972  01EB  3EE0               	addlw	224
   973  01EC  0021               	movlb	1	; select bank1
   974  01ED  0098               	movwf	24	;volatile
   975                           
   976                           ;main.c: 258: PR2 = 141 ;
   977  01EE  308D               	movlw	141
   978  01EF  0020               	movlb	0	; select bank0
   979  01F0  009B               	movwf	27	;volatile
   980                           
   981                           ;main.c: 259: for( uint08_t i = 0 ; i != 4 ; i++ )
   982  01F1  01B0               	clrf	main@i_490
   983  01F2                     L4:	
   984  01F2  3004               	movlw	4
   985  01F3  0630               	xorwf	main@i_490,w
   986  01F4  1903               	btfsc	3,2
   987  01F5  2A4E               	goto	l205
   988                           
   989                           ;main.c: 260: displayBuffer[i] &= 0xFE ;
   990  01F6  30FE               	movlw	254
   991  01F7  00A6               	movwf	??_main
   992  01F8  0830               	movf	main@i_490,w
   993  01F9  3E42               	addlw	(low (_displayBuffer| 0))& (0+255)
   994  01FA  0086               	movwf	6
   995  01FB  0187               	clrf	7
   996  01FC  0826               	movf	??_main,w
   997  01FD  0581               	andwf	1,f
   998  01FE  3001               	movlw	1
   999  01FF  00A6               	movwf	??_main
  1000  0200  0826               	movf	??_main,w
  1001  0201  07B0               	addwf	main@i_490,f
  1002  0202  29F2               	goto	L4
  1003  0203                     l206:	
  1004                           ;main.c: 263: default:
  1005                           
  1006                           ;main.c: 261: break ;
  1007                           
  1008                           
  1009                           ;main.c: 264: if( (events_.soundOnKey&&!(events_.soundOnKey=0)) ) {
  1010  0203  1DBD               	btfss	_events_,3
  1011  0204  2A11               	goto	l1877
  1012  0205  11BD               	bcf	_events_,3
  1013                           
  1014                           ;main.c: 265: durationCounter_.key = 0x40 ;
  1015  0206  3040               	movlw	64
  1016  0207  00A6               	movwf	??_main
  1017  0208  0826               	movf	??_main,w
  1018  0209  00BB               	movwf	_durationCounter_+1
  1019                           
  1020                           ;main.c: 266: PR2 = 125 ;
  1021  020A  307D               	movlw	125
  1022  020B  009B               	movwf	27	;volatile
  1023                           
  1024                           ;main.c: 267: CCPR2L = ( PR2 >> 1 ) ;
  1025  020C  361B               	lsrf	27,w	;volatile
  1026  020D  0025               	movlb	5	; select bank5
  1027  020E  0098               	movwf	24	;volatile
  1028                           
  1029                           ;main.c: 268: T2CONbits.TMR2ON=1 ;
  1030  020F  0020               	movlb	0	; select bank0
  1031  0210  151C               	bsf	28,2	;volatile
  1032  0211                     l1877:	
  1033                           
  1034                           ;main.c: 269: }
  1035                           ;main.c: 270: if( (events_.soundOn&&!(events_.soundOn=0)) && !durationCounter_.key ) {
  1036  0211  1D3D               	btfss	_events_,2
  1037  0212  2A4E               	goto	l205
  1038  0213  113D               	bcf	_events_,2
  1039  0214  083B               	movf	_durationCounter_+1,w
  1040  0215  1D03               	btfss	3,2
  1041  0216  2A4E               	goto	l205
  1042                           
  1043                           ;main.c: 271: durationCounter_.click = 0x80 ;
  1044  0217  3080               	movlw	128
  1045  0218  00A6               	movwf	??_main
  1046  0219  0826               	movf	??_main,w
  1047  021A  00BA               	movwf	_durationCounter_
  1048                           
  1049                           ;main.c: 272: if( !autoHideCounter_ )
  1050  021B  0838               	movf	_autoHideCounter_,w
  1051  021C  0439               	iorwf	_autoHideCounter_+1,w
  1052  021D  1D03               	btfss	3,2
  1053  021E  2A32               	goto	l1889
  1054                           
  1055                           ;main.c: 273: displayBuffer[3] = SEGMENT_BIT[ ( beatCounter.beat ) + 1 ] | 0x01 ;
  1056  021F  083C               	movf	_beatCounter,w
  1057  0220  3903               	andlw	3
  1058  0221  3E01               	addlw	1
  1059  0222  00A6               	movwf	??_main
  1060  0223  3000               	movlw	0
  1061  0224  1803               	skipnc
  1062  0225  3001               	movlw	1
  1063  0226  00A7               	movwf	??_main+1
  1064  0227  3000               	movlw	low (_SEGMENT_BIT| (0+32768))
  1065  0228  0726               	addwf	??_main,w
  1066  0229  0084               	movwf	4
  1067  022A  3084               	movlw	high (_SEGMENT_BIT| (0+32768))
  1068  022B  3D27               	addwfc	??_main+1,w
  1069  022C  0085               	movwf	5
  1070  022D  0800               	movf	0,w	;code access
  1071  022E  3801               	iorlw	1
  1072  022F  00A8               	movwf	??_main+2
  1073  0230  0828               	movf	??_main+2,w
  1074  0231  00C5               	movwf	_displayBuffer+3
  1075  0232                     l1889:	
  1076                           
  1077                           ;main.c: 275: if( !beatCounter.beat ) {
  1078  0232  083C               	movf	_beatCounter,w
  1079  0233  3903               	andlw	3
  1080  0234  3A00               	xorlw	0
  1081  0235  1D03               	skipz
  1082  0236  2A41               	goto	l1897
  1083                           
  1084                           ;main.c: 276: if( beatCounter.measure & 0x01 )
  1085  0237  0C3C               	rrf	_beatCounter,w
  1086  0238  0C89               	rrf	9,f
  1087  0239  3903               	andlw	3
  1088  023A  3901               	andlw	1
  1089  023B  1903               	btfsc	3,2
  1090  023C  2A3F               	goto	l1895
  1091                           
  1092                           ;main.c: 277: PR2 = 167 ;
  1093  023D  30A7               	movlw	167
  1094  023E  2A42               	goto	L2
  1095  023F                     l1895:	
  1096                           
  1097                           ;main.c: 278: else
  1098                           ;main.c: 279: PR2 = 125 ;
  1099  023F  307D               	movlw	125
  1100  0240  2A42               	goto	L2
  1101  0241                     l1897:	
  1102                           ;main.c: 280: }
  1103                           
  1104                           
  1105                           ;main.c: 281: else {
  1106                           ;main.c: 282: PR2 = 251 ;
  1107  0241  30FB               	movlw	251
  1108  0242                     L2:	
  1109  0242  009B               	movwf	27	;volatile
  1110                           
  1111                           ;main.c: 283: }
  1112                           ;main.c: 285: CCPR2L = ( PR2 >> 1 ) ;
  1113  0243  361B               	lsrf	27,w	;volatile
  1114  0244  0025               	movlb	5	; select bank5
  1115  0245  0098               	movwf	24	;volatile
  1116                           
  1117                           ;main.c: 286: T2CONbits.TMR2ON=1 ;
  1118  0246  0020               	movlb	0	; select bank0
  1119  0247  151C               	bsf	28,2	;volatile
  1120                           
  1121                           ;main.c: 289: }
  1122                           
  1123                           ;main.c: 287: }
  1124                           ;main.c: 288: break ;
  1125  0248  2A4E               	goto	l205
  1126  0249                     l1905:	
  1127  0249  083F               	movf	_machineState,w
  1128                           
  1129                           ; Switch size 1, requested type "space"
  1130                           ; Number of cases is 1, Range of values is 1 to 1
  1131                           ; switch strategies available:
  1132                           ; Name         Instructions Cycles
  1133                           ; simple_byte            4     3 (average)
  1134                           ; direct_byte           11     9 (fixed)
  1135                           ; jumptable            263     9 (fixed)
  1136                           ;	Chosen strategy is simple_byte
  1137  024A  3A01               	xorlw	1	; case 1
  1138  024B  1903               	skipnz
  1139  024C  29EA               	goto	l1853
  1140  024D  2A03               	goto	l206
  1141  024E                     l205:	
  1142                           
  1143                           ;main.c: 291: if( (events_.soundOff&&!(events_.soundOff=0)) ) {
  1144  024E  1E3D               	btfss	_events_,4
  1145  024F  2916               	goto	l165
  1146  0250  123D               	bcf	_events_,4
  1147                           
  1148                           ;main.c: 292: T2CONbits.TMR2ON=0 ;
  1149  0251  111C               	bcf	28,2	;volatile
  1150                           
  1151                           ;main.c: 293: displayBuffer[3] &= 0xFE ;
  1152  0252  30FE               	movlw	254
  1153  0253  00A6               	movwf	??_main
  1154  0254  0826               	movf	??_main,w
  1155  0255  05C5               	andwf	_displayBuffer+3,f
  1156                           
  1157                           ;main.c: 294: }
  1158                           ;main.c: 296: }
  1159  0256  2916               	goto	l165
  1160  0257                     __end_of_main:	
  1161                           
  1162                           	psect	text1
  1163  02C0                     __ptext1:	
  1164 ;; *************** function _initialize *****************
  1165 ;; Defined at:
  1166 ;;		line 23 in file "src/pic16f1827_init.h"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1180 ;;      Params:         0       0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    1
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _initialize
  1196  02C0                     _initialize:	
  1197                           
  1198                           ;pic16f1827_init.h: 26: OSCCONbits.SPLLEN = 1 ;
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _initialize: [wreg+status,2+status,0]
  1202  02C0  0021               	movlb	1	; select bank1
  1203  02C1  1799               	bsf	25,7	;volatile
  1204                           
  1205                           ;pic16f1827_init.h: 27: OSCCONbits.IRCF = 0b1110 ;
  1206  02C2  0819               	movf	25,w	;volatile
  1207  02C3  3987               	andlw	-121
  1208  02C4  3870               	iorlw	112
  1209  02C5  0099               	movwf	25	;volatile
  1210                           
  1211                           ;pic16f1827_init.h: 28: OSCCONbits.SCS = 0b00 ;
  1212  02C6  30FC               	movlw	-4
  1213  02C7  0599               	andwf	25,f	;volatile
  1214                           
  1215                           ;pic16f1827_init.h: 29: OSCTUNE = 0b00000000 ;
  1216  02C8  0198               	clrf	24	;volatile
  1217                           
  1218                           ;pic16f1827_init.h: 32: INTCONbits.GIE = 0 ;
  1219  02C9  138B               	bcf	11,7	;volatile
  1220                           
  1221                           ;pic16f1827_init.h: 33: INTCONbits.PEIE = 0 ;
  1222  02CA  130B               	bcf	11,6	;volatile
  1223                           
  1224                           ;pic16f1827_init.h: 36: PSA = 1 ;
  1225  02CB  1595               	bsf	21,3	;volatile
  1226                           
  1227                           ;pic16f1827_init.h: 37: TMR0CS = 0 ;
  1228  02CC  1295               	bcf	21,5	;volatile
  1229                           
  1230                           ;pic16f1827_init.h: 38: TMR0SE = 1 ;
  1231  02CD  1615               	bsf	21,4	;volatile
  1232                           
  1233                           ;pic16f1827_init.h: 39: TMR0 = 0 ;
  1234  02CE  0020               	movlb	0	; select bank0
  1235  02CF  0195               	clrf	21	;volatile
  1236                           
  1237                           ;pic16f1827_init.h: 40: TMR0IF = 0 ;
  1238  02D0  110B               	bcf	11,2	;volatile
  1239                           
  1240                           ;pic16f1827_init.h: 41: TMR0IE = 0 ;
  1241  02D1  128B               	bcf	11,5	;volatile
  1242                           
  1243                           ;pic16f1827_init.h: 44: TMR2ON = 1 ;
  1244  02D2  151C               	bsf	28,2	;volatile
  1245                           
  1246                           ;pic16f1827_init.h: 45: T2CONbits.T2CKPS = 0b11;
  1247  02D3  3003               	movlw	3
  1248  02D4  049C               	iorwf	28,f	;volatile
  1249                           
  1250                           ;pic16f1827_init.h: 46: T2CONbits.T2OUTPS = 0b0000;
  1251  02D5  3087               	movlw	-121
  1252  02D6  059C               	andwf	28,f	;volatile
  1253                           
  1254                           ;pic16f1827_init.h: 47: PR2 = 124 ;
  1255  02D7  307C               	movlw	124
  1256  02D8  009B               	movwf	27	;volatile
  1257                           
  1258                           ;pic16f1827_init.h: 48: TMR2 = 0 ;
  1259  02D9  019A               	clrf	26	;volatile
  1260                           
  1261                           ;pic16f1827_init.h: 49: TMR2IF = 0 ;
  1262  02DA  1091               	bcf	17,1	;volatile
  1263                           
  1264                           ;pic16f1827_init.h: 50: TMR2IE = 0 ;
  1265  02DB  0021               	movlb	1	; select bank1
  1266  02DC  1091               	bcf	17,1	;volatile
  1267                           
  1268                           ;pic16f1827_init.h: 53: TMR4ON = 0 ;
  1269  02DD  0028               	movlb	8	; select bank8
  1270  02DE  1117               	bcf	23,2	;volatile
  1271                           
  1272                           ;pic16f1827_init.h: 54: T4CON = 0b00000010 ;
  1273  02DF  3002               	movlw	2
  1274  02E0  0097               	movwf	23	;volatile
  1275                           
  1276                           ;pic16f1827_init.h: 55: PR4 = 124 ;
  1277  02E1  307C               	movlw	124
  1278  02E2  0096               	movwf	22	;volatile
  1279                           
  1280                           ;pic16f1827_init.h: 56: TMR4 = 0 ;
  1281  02E3  0195               	clrf	21	;volatile
  1282                           
  1283                           ;pic16f1827_init.h: 57: TMR4IF = 0 ;
  1284  02E4  0020               	movlb	0	; select bank0
  1285  02E5  1093               	bcf	19,1	;volatile
  1286                           
  1287                           ;pic16f1827_init.h: 58: TMR4IE = 0 ;
  1288  02E6  0021               	movlb	1	; select bank1
  1289  02E7  1093               	bcf	19,1	;volatile
  1290                           
  1291                           ;pic16f1827_init.h: 61: TMR6ON = 0 ;
  1292  02E8  0028               	movlb	8	; select bank8
  1293  02E9  111E               	bcf	30,2	;volatile
  1294                           
  1295                           ;pic16f1827_init.h: 62: T6CONbits.T6CKPS = 0b00;
  1296  02EA  30FC               	movlw	-4
  1297  02EB  059E               	andwf	30,f	;volatile
  1298                           
  1299                           ;pic16f1827_init.h: 63: T6CONbits.T6OUTPS = 0b0000 ;
  1300  02EC  3087               	movlw	-121
  1301  02ED  059E               	andwf	30,f	;volatile
  1302                           
  1303                           ;pic16f1827_init.h: 64: PR6 = 124 ;
  1304  02EE  307C               	movlw	124
  1305  02EF  009D               	movwf	29	;volatile
  1306                           
  1307                           ;pic16f1827_init.h: 65: TMR6 = 0 ;
  1308  02F0  019C               	clrf	28	;volatile
  1309                           
  1310                           ;pic16f1827_init.h: 66: TMR6IF = 0 ;
  1311  02F1  0020               	movlb	0	; select bank0
  1312  02F2  1193               	bcf	19,3	;volatile
  1313                           
  1314                           ;pic16f1827_init.h: 67: TMR6IE = 0 ;
  1315  02F3  0021               	movlb	1	; select bank1
  1316  02F4  1193               	bcf	19,3	;volatile
  1317                           
  1318                           ;pic16f1827_init.h: 70: CCP2CON = 0B00001100 ;
  1319  02F5  300C               	movlw	12
  1320  02F6  0025               	movlb	5	; select bank5
  1321  02F7  009A               	movwf	26	;volatile
  1322                           
  1323                           ;pic16f1827_init.h: 71: CCP2SEL = 1 ;
  1324  02F8  0022               	movlb	2	; select bank2
  1325  02F9  159D               	bsf	29,3	;volatile
  1326                           
  1327                           ;pic16f1827_init.h: 72: PSTR2CON = 0b00000001 ;
  1328  02FA  3001               	movlw	1
  1329  02FB  0025               	movlb	5	; select bank5
  1330  02FC  009D               	movwf	29	;volatile
  1331                           
  1332                           ;pic16f1827_init.h: 73: CCPTMRS = 0b00000000 ;
  1333  02FD  019E               	clrf	30	;volatile
  1334                           
  1335                           ;pic16f1827_init.h: 74: CCPR2L = 0 ;
  1336  02FE  0198               	clrf	24	;volatile
  1337                           
  1338                           ;pic16f1827_init.h: 75: CCPR2H = 0 ;
  1339  02FF  0199               	clrf	25	;volatile
  1340                           
  1341                           ;pic16f1827_init.h: 78: ANSELA = 0b00000000 ;
  1342  0300  0023               	movlb	3	; select bank3
  1343  0301  018C               	clrf	12	;volatile
  1344                           
  1345                           ;pic16f1827_init.h: 79: ANSELB = 0b00000000 ;
  1346  0302  018D               	clrf	13	;volatile
  1347                           
  1348                           ;pic16f1827_init.h: 81: TRISA = 0b01110000 ;
  1349  0303  3070               	movlw	112
  1350  0304  0021               	movlb	1	; select bank1
  1351  0305  008C               	movwf	12	;volatile
  1352                           
  1353                           ;pic16f1827_init.h: 82: TRISB = 0b00000000 ;
  1354  0306  018D               	clrf	13	;volatile
  1355  0307  0008               	return
  1356  0308                     __end_of_initialize:	
  1357                           
  1358                           	psect	text2
  1359  0257                     __ptext2:	
  1360 ;; *************** function __configuration_Save *****************
  1361 ;; Defined at:
  1362 ;;		line 23 in file "src/configuration.h"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  config          1    wreg     PTR struct .
  1365 ;;		 -> config(4), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  config          1    3[BANK0 ] PTR struct .
  1368 ;;		 -> config(4), 
  1369 ;;  i               1    4[BANK0 ] unsigned char 
  1370 ;;  romPosition     1    5[BANK0 ] unsigned char 
  1371 ;;  isPositionCh    1    2[BANK0 ] unsigned char 
  1372 ;;  ptrConfig       1    1[BANK0 ] PTR unsigned char 
  1373 ;;		 -> config(4), 
  1374 ;;  saveIntcon      1    0[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1384 ;;      Params:         0       0       0       0       0       0
  1385 ;;      Locals:         0       6       0       0       0       0
  1386 ;;      Temps:          1       0       0       0       0       0
  1387 ;;      Totals:         1       6       0       0       0       0
  1388 ;;Total ram usage:        7 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    2
  1391 ;; This function calls:
  1392 ;;		__private_ReadByte
  1393 ;;		__private_WriteByte
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function __configuration_Save
  1401  0257                     __configuration_Save:	
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in __configuration_Save: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1405                           ;__configuration_Save@config stored from wreg
  1406  0257  0020               	movlb	0	; select bank0
  1407  0258  00A3               	movwf	__configuration_Save@config
  1408                           
  1409                           ;configuration.h: 25: uint08_t* ptrConfig = (uint08_t*) config ;
  1410  0259  0823               	movf	__configuration_Save@config,w
  1411  025A  00F6               	movwf	??__configuration_Save
  1412  025B  0876               	movf	??__configuration_Save,w
  1413  025C  00A1               	movwf	__configuration_Save@ptrConfig
  1414                           
  1415                           ;configuration.h: 26: uint08_t romPosition = 0xFF ;
  1416  025D  30FF               	movlw	255
  1417  025E  00F6               	movwf	??__configuration_Save
  1418  025F  0876               	movf	??__configuration_Save,w
  1419  0260  00A5               	movwf	__configuration_Save@romPosition
  1420                           
  1421                           ;configuration.h: 27: uint08_t isPositionChanged = 0 ;
  1422  0261  01A2               	clrf	__configuration_Save@isPositionChanged
  1423                           
  1424                           ;configuration.h: 28: uint08_t saveIntcon ;
  1425                           ;configuration.h: 31: saveIntcon = INTCON ;
  1426  0262  080B               	movf	11,w	;volatile
  1427  0263  00F6               	movwf	??__configuration_Save
  1428  0264  0876               	movf	??__configuration_Save,w
  1429  0265  00A0               	movwf	__configuration_Save@saveIntcon
  1430                           
  1431                           ;configuration.h: 32: INTCONbits.GIE = 0 ;
  1432  0266  138B               	bcf	11,7	;volatile
  1433                           
  1434                           ;configuration.h: 35: romPosition = _private_ReadByte( 0xFF ) & 0xF0 ;
  1435  0267  30FF               	movlw	255
  1436  0268  3184  2429  3182   	fcall	__private_ReadByte
  1437  026B  39F0               	andlw	240
  1438  026C  00F6               	movwf	??__configuration_Save
  1439  026D  0876               	movf	??__configuration_Save,w
  1440  026E  0020               	movlb	0	; select bank0
  1441  026F  00A5               	movwf	__configuration_Save@romPosition
  1442                           
  1443                           ;configuration.h: 36: if ( romPosition == 0xF0 ) romPosition = 0x00 ;
  1444  0270  30F0               	movlw	240
  1445  0271  0625               	xorwf	__configuration_Save@romPosition,w
  1446  0272  1903               	btfsc	3,2
  1447  0273  01A5               	clrf	__configuration_Save@romPosition
  1448                           
  1449                           ;configuration.h: 39: EECON1bits.WREN = 1 ;
  1450  0274  0023               	movlb	3	; select bank3
  1451  0275  1515               	bsf	21,2	;volsfr
  1452                           
  1453                           ;configuration.h: 42: if ( ++( config->writeCount ) == 0x00 ) {
  1454  0276  3001               	movlw	1
  1455  0277  00F6               	movwf	??__configuration_Save
  1456  0278  0020               	movlb	0	; select bank0
  1457  0279  0823               	movf	__configuration_Save@config,w
  1458  027A  3E03               	addlw	3
  1459  027B  0086               	movwf	6
  1460  027C  0187               	clrf	7
  1461  027D  0876               	movf	??__configuration_Save,w
  1462  027E  0781               	addwf	1,f
  1463  027F  1D03               	btfss	3,2
  1464  0280  2A8D               	goto	l113
  1465                           
  1466                           ;configuration.h: 43: isPositionChanged = 1 ;
  1467  0281  01A2               	clrf	__configuration_Save@isPositionChanged
  1468  0282  0AA2               	incf	__configuration_Save@isPositionChanged,f
  1469                           
  1470                           ;configuration.h: 44: config->writeCount = 0 ;
  1471  0283  0823               	movf	__configuration_Save@config,w
  1472  0284  3E03               	addlw	3
  1473  0285  0086               	movwf	6
  1474  0286  0187               	clrf	7
  1475  0287  0181               	clrf	1
  1476                           
  1477                           ;configuration.h: 45: romPosition += 0x10 ;
  1478  0288  3010               	movlw	16
  1479  0289  00F6               	movwf	??__configuration_Save
  1480  028A  0876               	movf	??__configuration_Save,w
  1481  028B  07A5               	addwf	__configuration_Save@romPosition,f
  1482                           
  1483                           ;configuration.h: 47: romPosition = 0x00 ;
  1484  028C  01A5               	clrf	__configuration_Save@romPosition
  1485  028D                     l113:	
  1486                           
  1487                           ;configuration.h: 48: } ;
  1488                           ;configuration.h: 51: for ( uint08_t i = 0 ; i < sizeof ( ConfigurationData ) ; i++ , pt
      +                          rConfig++ ) {
  1489  028D  01A4               	clrf	__configuration_Save@i
  1490  028E  2A98               	goto	L5
  1491  028F                     l1681:	
  1492  028F  3001               	movlw	1
  1493  0290  00F6               	movwf	??__configuration_Save
  1494  0291  0876               	movf	??__configuration_Save,w
  1495  0292  0020               	movlb	0	; select bank0
  1496  0293  07A4               	addwf	__configuration_Save@i,f
  1497  0294  3001               	movlw	1
  1498  0295  00F6               	movwf	??__configuration_Save
  1499  0296  0876               	movf	??__configuration_Save,w
  1500  0297  07A1               	addwf	__configuration_Save@ptrConfig,f
  1501  0298                     L5:	
  1502  0298  3004               	movlw	4
  1503  0299  0224               	subwf	__configuration_Save@i,w
  1504  029A  1803               	btfsc	3,0
  1505  029B  2AAB               	goto	l1685
  1506                           
  1507                           ;configuration.h: 52: _private_WriteByte( romPosition + i , *ptrConfig ) ;
  1508  029C  0821               	movf	__configuration_Save@ptrConfig,w
  1509  029D  0086               	movwf	6
  1510  029E  0187               	clrf	7
  1511  029F  0801               	movf	1,w
  1512  02A0  00F6               	movwf	??__configuration_Save
  1513  02A1  0876               	movf	??__configuration_Save,w
  1514  02A2  00F4               	movwf	__private_WriteByte@data
  1515  02A3  0825               	movf	__configuration_Save@romPosition,w
  1516  02A4  0724               	addwf	__configuration_Save@i,w
  1517  02A5  3184  2417  3182   	fcall	__private_WriteByte
  1518                           
  1519                           ;configuration.h: 53: if ( EECON1bits.WRERR ) break ;
  1520  02A8  0023               	movlb	3	; select bank3
  1521  02A9  1D95               	btfss	21,3	;volsfr
  1522  02AA  2A8F               	goto	l1681
  1523  02AB                     l1685:	
  1524                           
  1525                           ;configuration.h: 54: }
  1526                           ;configuration.h: 57: if ( isPositionChanged && ( !EECON1bits.WRERR ) ) {
  1527  02AB  0020               	movlb	0	; select bank0
  1528  02AC  0822               	movf	__configuration_Save@isPositionChanged,w
  1529  02AD  1903               	btfsc	3,2
  1530  02AE  2ABA               	goto	l1691
  1531  02AF  0023               	movlb	3	; select bank3
  1532  02B0  1995               	btfsc	21,3	;volsfr
  1533  02B1  2ABA               	goto	l1691
  1534                           
  1535                           ;configuration.h: 58: _private_WriteByte( 0xFF , romPosition ) ;
  1536  02B2  0020               	movlb	0	; select bank0
  1537  02B3  0825               	movf	__configuration_Save@romPosition,w
  1538  02B4  00F6               	movwf	??__configuration_Save
  1539  02B5  0876               	movf	??__configuration_Save,w
  1540  02B6  00F4               	movwf	__private_WriteByte@data
  1541  02B7  30FF               	movlw	255
  1542  02B8  3184  2417         	fcall	__private_WriteByte
  1543  02BA                     l1691:	
  1544                           
  1545                           ;configuration.h: 59: }
  1546                           ;configuration.h: 62: EECON1bits.WREN = 0 ;
  1547  02BA  0023               	movlb	3	; select bank3
  1548  02BB  1115               	bcf	21,2	;volsfr
  1549                           
  1550                           ;configuration.h: 65: INTCON = saveIntcon ;
  1551  02BC  0020               	movlb	0	; select bank0
  1552  02BD  0820               	movf	__configuration_Save@saveIntcon,w
  1553  02BE  008B               	movwf	11	;volatile
  1554  02BF  0008               	return
  1555  02C0                     __end_of__configuration_Save:	
  1556                           
  1557                           	psect	text3
  1558  0417                     __ptext3:	
  1559 ;; *************** function __private_WriteByte *****************
  1560 ;; Defined at:
  1561 ;;		line 93 in file "src/configuration.h"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  address         1    wreg     unsigned char 
  1564 ;;  data            1    4[COMMON] unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  address         1    5[COMMON] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, status,2
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1576 ;;      Params:         1       0       0       0       0       0
  1577 ;;      Locals:         1       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0
  1579 ;;      Totals:         2       0       0       0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		__configuration_Save
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function __private_WriteByte
  1592  0417                     __private_WriteByte:	
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in __private_WriteByte: [wreg+status,2]
  1596                           ;__private_WriteByte@address stored from wreg
  1597  0417  00F5               	movwf	__private_WriteByte@address
  1598                           
  1599                           ;configuration.h: 94: EEADRH = 0x00 ;
  1600  0418  0023               	movlb	3	; select bank3
  1601  0419  0192               	clrf	18	;volatile
  1602                           
  1603                           ;configuration.h: 95: EEDATH = 0x00 ;
  1604  041A  0194               	clrf	20	;volatile
  1605                           
  1606                           ;configuration.h: 96: EEADRL = address ;
  1607  041B  0875               	movf	__private_WriteByte@address,w
  1608  041C  0091               	movwf	17	;volatile
  1609                           
  1610                           ;configuration.h: 97: EEDATL = data ;
  1611  041D  0874               	movf	__private_WriteByte@data,w
  1612  041E  0093               	movwf	19	;volatile
  1613                           
  1614                           ;configuration.h: 98: EECON2 = 0x55 ;
  1615  041F  3055               	movlw	85
  1616  0420  0096               	movwf	22	;volsfr
  1617                           
  1618                           ;configuration.h: 99: EECON2 = 0xAA ;
  1619  0421  30AA               	movlw	170
  1620  0422  0096               	movwf	22	;volsfr
  1621                           
  1622                           ;configuration.h: 101: EECON1bits.WR = 1 ;
  1623  0423  1495               	bsf	21,1	;volsfr
  1624  0424                     l128:	
  1625                           ;configuration.h: 102: while ( !PIR2bits.EEIF ) ;
  1626                           
  1627  0424  0020               	movlb	0	; select bank0
  1628  0425  1E12               	btfss	18,4	;volatile
  1629  0426  2C24               	goto	l128
  1630                           
  1631                           ;configuration.h: 103: PIR2bits.EEIF = 0 ;
  1632  0427  1212               	bcf	18,4	;volatile
  1633  0428  0008               	return
  1634  0429                     __end_of__private_WriteByte:	
  1635                           
  1636                           	psect	text4
  1637  0308                     __ptext4:	
  1638 ;; *************** function __configuration_Load *****************
  1639 ;; Defined at:
  1640 ;;		line 71 in file "src/configuration.h"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  config          1    wreg     PTR struct .
  1643 ;;		 -> config(4), 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  config          1    0[BANK0 ] PTR struct .
  1646 ;;		 -> config(4), 
  1647 ;;  i               1    3[BANK0 ] unsigned char 
  1648 ;;  romPosition     1    2[BANK0 ] unsigned char 
  1649 ;;  ptrConfig       1    1[BANK0 ] PTR unsigned char 
  1650 ;;		 -> config(4), 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;		None               void
  1653 ;; Registers used:
  1654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1660 ;;      Params:         0       0       0       0       0       0
  1661 ;;      Locals:         0       4       0       0       0       0
  1662 ;;      Temps:          1       0       0       0       0       0
  1663 ;;      Totals:         1       4       0       0       0       0
  1664 ;;Total ram usage:        5 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    2
  1667 ;; This function calls:
  1668 ;;		__private_ReadByte
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function __configuration_Load
  1676  0308                     __configuration_Load:	
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in __configuration_Load: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1680                           ;__configuration_Load@config stored from wreg
  1681  0308  0020               	movlb	0	; select bank0
  1682  0309  00A0               	movwf	__configuration_Load@config
  1683                           
  1684                           ;configuration.h: 73: uint08_t* ptrConfig = (uint08_t*) config ;
  1685  030A  0820               	movf	__configuration_Load@config,w
  1686  030B  00F5               	movwf	??__configuration_Load
  1687  030C  0875               	movf	??__configuration_Load,w
  1688  030D  00A1               	movwf	__configuration_Load@ptrConfig
  1689                           
  1690                           ;configuration.h: 74: uint08_t romPosition = 0xFF ;
  1691  030E  30FF               	movlw	255
  1692  030F  00F5               	movwf	??__configuration_Load
  1693  0310  0875               	movf	??__configuration_Load,w
  1694  0311  00A2               	movwf	__configuration_Load@romPosition
  1695                           
  1696                           ;configuration.h: 77: romPosition = _private_ReadByte( 0xFF ) & 0xF0 ;
  1697  0312  30FF               	movlw	255
  1698  0313  3184  2429  3183   	fcall	__private_ReadByte
  1699  0316  39F0               	andlw	240
  1700  0317  00F5               	movwf	??__configuration_Load
  1701  0318  0875               	movf	??__configuration_Load,w
  1702  0319  0020               	movlb	0	; select bank0
  1703  031A  00A2               	movwf	__configuration_Load@romPosition
  1704                           
  1705                           ;configuration.h: 78: if ( romPosition == 0xF0 ) return ;
  1706  031B  30F0               	movlw	240
  1707  031C  0622               	xorwf	__configuration_Load@romPosition,w
  1708  031D  1903               	btfsc	3,2
  1709  031E  0008               	return
  1710                           
  1711                           ;configuration.h: 81: for ( uint08_t i = 0 ; i < sizeof ( ConfigurationData ) ; i++ , pt
      +                          rConfig++ ) {
  1712  031F  01A3               	clrf	__configuration_Load@i
  1713  0320                     L6:	
  1714  0320  3004               	movlw	4
  1715  0321  0223               	subwf	__configuration_Load@i,w
  1716  0322  1803               	btfsc	3,0
  1717  0323  0008               	return
  1718                           
  1719                           ;configuration.h: 82: *ptrConfig = _private_ReadByte( i + romPosition ) ;
  1720  0324  0823               	movf	__configuration_Load@i,w
  1721  0325  0722               	addwf	__configuration_Load@romPosition,w
  1722  0326  3184  2429  3183   	fcall	__private_ReadByte
  1723  0329  00F5               	movwf	??__configuration_Load
  1724  032A  0020               	movlb	0	; select bank0
  1725  032B  0821               	movf	__configuration_Load@ptrConfig,w
  1726  032C  0086               	movwf	6
  1727  032D  0187               	clrf	7
  1728  032E  0875               	movf	??__configuration_Load,w
  1729  032F  0081               	movwf	1
  1730  0330  3001               	movlw	1
  1731  0331  00F5               	movwf	??__configuration_Load
  1732  0332  0875               	movf	??__configuration_Load,w
  1733  0333  07A3               	addwf	__configuration_Load@i,f
  1734  0334  3001               	movlw	1
  1735  0335  00F5               	movwf	??__configuration_Load
  1736  0336  0875               	movf	??__configuration_Load,w
  1737  0337  07A1               	addwf	__configuration_Load@ptrConfig,f
  1738  0338  2B20               	goto	L6
  1739  0339                     __end_of__configuration_Load:	
  1740                           
  1741                           	psect	text5
  1742  0429                     __ptext5:	
  1743 ;; *************** function __private_ReadByte *****************
  1744 ;; Defined at:
  1745 ;;		line 108 in file "src/configuration.h"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  address         1    wreg     unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  address         1    4[COMMON] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      unsigned char 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1759 ;;      Params:         0       0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0
  1762 ;;      Totals:         1       0       0       0       0       0
  1763 ;;Total ram usage:        1 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		__configuration_Save
  1770 ;;		__configuration_Load
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function __private_ReadByte
  1776  0429                     __private_ReadByte:	
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in __private_ReadByte: [wreg+status,2]
  1780                           ;__private_ReadByte@address stored from wreg
  1781  0429  00F4               	movwf	__private_ReadByte@address
  1782                           
  1783                           ;configuration.h: 109: EEADRH = 0x00 ;
  1784  042A  0023               	movlb	3	; select bank3
  1785  042B  0192               	clrf	18	;volatile
  1786                           
  1787                           ;configuration.h: 110: EEADRL = address ;
  1788  042C  0874               	movf	__private_ReadByte@address,w
  1789  042D  0091               	movwf	17	;volatile
  1790                           
  1791                           ;configuration.h: 111: EECON1bits.EEPGD = 0 ;
  1792  042E  1395               	bcf	21,7	;volsfr
  1793                           
  1794                           ;configuration.h: 112: EECON1bits.CFGS = 0 ;
  1795  042F  1315               	bcf	21,6	;volsfr
  1796                           
  1797                           ;configuration.h: 113: EECON1bits.RD = 1 ;
  1798  0430  1415               	bsf	21,0	;volsfr
  1799                           
  1800                           ;configuration.h: 114: __nop() ;
  1801  0431  0000               	nop
  1802                           
  1803                           ;configuration.h: 115: __nop() ;
  1804  0432  0000               	nop
  1805                           
  1806                           ;configuration.h: 116: return EEDATL ;
  1807  0433  0023               	movlb	3	; select bank3
  1808  0434  0813               	movf	19,w	;volatile
  1809  0435  0008               	return
  1810  0436                     __end_of__private_ReadByte:	
  1811                           
  1812                           	psect	intentry
  1813  0004                     __pintentry:	
  1814 ;; *************** function __ *****************
  1815 ;; Defined at:
  1816 ;;		line 301 in file "src/main.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1830 ;;      Params:         0       0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0
  1832 ;;      Temps:          4       0       0       0       0       0
  1833 ;;      Totals:         4       0       0       0       0       0
  1834 ;;Total ram usage:        4 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		Interrupt level 1
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843  0004                     __:	
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in __: [wreg-fsr1h+status,2+status,0+pclath]
  1847  0004  3180               	pagesel	$
  1848  0005  0020               	movlb	0	; select bank0
  1849  0006  087F               	movf	127,w
  1850  0007  00F3               	movwf	??__+3
  1851                           
  1852                           ;main.c: 302: if( !PIR3bits.TMR6IF ) return ;
  1853  0008  1D93               	btfss	19,3	;volatile
  1854  0009  28E5               	goto	i1l220
  1855                           
  1856                           ;main.c: 303: PIR3bits.TMR6IF = 0 ;
  1857  000A  1193               	bcf	19,3	;volatile
  1858                           
  1859                           ;main.c: 306: tempoCounter += config.tempo ;
  1860  000B  0846               	movf	_config,w
  1861  000C  00F0               	movwf	??__
  1862  000D  0847               	movf	_config+1,w
  1863  000E  00F1               	movwf	??__+1
  1864  000F  01F2               	clrf	??__+2
  1865  0010  0870               	movf	??__,w
  1866  0011  07B5               	addwf	_tempoCounter,f
  1867  0012  0871               	movf	??__+1,w
  1868  0013  3DB6               	addwfc	_tempoCounter+1,f
  1869  0014  0872               	movf	??__+2,w
  1870  0015  3DB7               	addwfc	_tempoCounter+2,f
  1871                           
  1872                           ;main.c: 307: if( tempoCounter >= ( 32000000L * 3 / 25 ) ) {
  1873  0016  303A               	movlw	58
  1874  0017  0237               	subwf	_tempoCounter+2,w
  1875  0018  1D03               	skipz
  1876  0019  2820               	goto	u105_25
  1877  001A  3098               	movlw	152
  1878  001B  0236               	subwf	_tempoCounter+1,w
  1879  001C  1D03               	skipz
  1880  001D  2820               	goto	u105_25
  1881  001E  3000               	movlw	0
  1882  001F  0235               	subwf	_tempoCounter,w
  1883  0020                     u105_25:	
  1884  0020  1C03               	skipc
  1885  0021  2833               	goto	i1l1555
  1886                           
  1887                           ;main.c: 308: tempoCounter -= ( 32000000L * 3 / 25 ) ;
  1888  0022  3000               	movlw	0
  1889  0023  00F0               	movwf	??__
  1890  0024  3098               	movlw	152
  1891  0025  00F1               	movwf	??__+1
  1892  0026  303A               	movlw	58
  1893  0027  00F2               	movwf	??__+2
  1894  0028  0870               	movf	??__,w
  1895  0029  02B5               	subwf	_tempoCounter,f
  1896  002A  0871               	movf	??__+1,w
  1897  002B  3BB6               	subwfb	_tempoCounter+1,f
  1898  002C  0872               	movf	??__+2,w
  1899  002D  3BB7               	subwfb	_tempoCounter+2,f
  1900                           
  1901                           ;main.c: 309: beatCounter.all++ ;
  1902  002E  3001               	movlw	1
  1903  002F  00F0               	movwf	??__
  1904  0030  0870               	movf	??__,w
  1905  0031  07BC               	addwf	_beatCounter,f
  1906                           
  1907                           ;main.c: 311: events_.soundOn = 1; ;
  1908  0032  153D               	bsf	_events_,2
  1909  0033                     i1l1555:	
  1910                           
  1911                           ;main.c: 312: }
  1912                           ;main.c: 315: static uint16_t interruptCount = 0 ;
  1913                           ;main.c: 316: if( ++interruptCount == 640 ) interruptCount = 0 ;
  1914  0033  3001               	movlw	1
  1915  0034  07F7               	addwf	__@interruptCount,f
  1916  0035  3000               	movlw	0
  1917  0036  3DF8               	addwfc	__@interruptCount+1,f
  1918  0037  3080               	movlw	128
  1919  0038  0677               	xorwf	__@interruptCount,w
  1920  0039  3002               	movlw	2
  1921  003A  1903               	skipnz
  1922  003B  0678               	xorwf	__@interruptCount+1,w
  1923  003C  1D03               	btfss	3,2
  1924  003D  2840               	goto	i1l1559
  1925  003E  01F7               	clrf	__@interruptCount
  1926  003F  01F8               	clrf	__@interruptCount+1
  1927  0040                     i1l1559:	
  1928                           
  1929                           ;main.c: 318: if( !( interruptCount & 0x0F ) ) {
  1930  0040  300F               	movlw	15
  1931  0041  0577               	andwf	__@interruptCount,w
  1932  0042  00F0               	movwf	??__
  1933  0043  3000               	movlw	0
  1934  0044  0578               	andwf	__@interruptCount+1,w
  1935  0045  00F1               	movwf	??__+1
  1936  0046  0870               	movf	??__,w
  1937  0047  0471               	iorwf	??__+1,w
  1938  0048  1D03               	btfss	3,2
  1939  0049  2865               	goto	i1l1579
  1940                           
  1941                           ;main.c: 319: if( autoHideCounter_ )
  1942  004A  0838               	movf	_autoHideCounter_,w
  1943  004B  0439               	iorwf	_autoHideCounter_+1,w
  1944  004C  1903               	btfsc	3,2
  1945  004D  2852               	goto	i1l1565
  1946                           
  1947                           ;main.c: 320: autoHideCounter_-- ;
  1948  004E  3001               	movlw	1
  1949  004F  02B8               	subwf	_autoHideCounter_,f
  1950  0050  3000               	movlw	0
  1951  0051  3BB9               	subwfb	_autoHideCounter_+1,f
  1952  0052                     i1l1565:	
  1953                           
  1954                           ;main.c: 322: if( durationCounter_.click && ! --durationCounter_.click && !durationCount
      +                          er_.key )
  1955  0052  083A               	movf	_durationCounter_,w
  1956  0053  1903               	btfsc	3,2
  1957  0054  285D               	goto	i1l1573
  1958  0055  3001               	movlw	1
  1959  0056  02BA               	subwf	_durationCounter_,f
  1960  0057  1D03               	btfss	3,2
  1961  0058  285D               	goto	i1l1573
  1962  0059  083B               	movf	_durationCounter_+1,w
  1963  005A  1D03               	btfss	3,2
  1964  005B  285D               	goto	i1l1573
  1965                           
  1966                           ;main.c: 323: events_.soundOff = 1; ;
  1967  005C  163D               	bsf	_events_,4
  1968  005D                     i1l1573:	
  1969                           
  1970                           ;main.c: 324: if( durationCounter_.key && ! --durationCounter_.key )
  1971  005D  083B               	movf	_durationCounter_+1,w
  1972  005E  1903               	btfsc	3,2
  1973  005F  2865               	goto	i1l1579
  1974  0060  3001               	movlw	1
  1975  0061  02BB               	subwf	_durationCounter_+1,f
  1976  0062  1D03               	btfss	3,2
  1977  0063  2865               	goto	i1l1579
  1978                           
  1979                           ;main.c: 325: events_.soundOff = 1; ;
  1980  0064  163D               	bsf	_events_,4
  1981  0065                     i1l1579:	
  1982                           
  1983                           ;main.c: 326: }
  1984                           ;main.c: 329: if( !interruptCount ) {
  1985  0065  0877               	movf	__@interruptCount,w
  1986  0066  0478               	iorwf	__@interruptCount+1,w
  1987  0067  1D03               	btfss	3,2
  1988  0068  28A1               	goto	i1l1613
  1989                           
  1990                           ;main.c: 330: portAState_.byte = (~PORTA&0x70); ;
  1991  0069  090C               	comf	12,w	;volatile
  1992  006A  3970               	andlw	112
  1993  006B  00F0               	movwf	??__
  1994  006C  0870               	movf	??__,w
  1995  006D  00C0               	movwf	_portAState_
  1996                           
  1997                           ;main.c: 332: if( portAState_.keyUp ) {
  1998  006E  1F40               	btfss	_portAState_,6
  1999  006F  287E               	goto	i1l1591
  2000                           
  2001                           ;main.c: 333: if( ++keyCount.up == 0x40 ) {
  2002  0070  3001               	movlw	1
  2003  0071  00F0               	movwf	??__
  2004  0072  0870               	movf	??__,w
  2005  0073  07B2               	addwf	_keyCount,f
  2006  0074  3040               	movlw	64
  2007  0075  0632               	xorwf	_keyCount,w
  2008  0076  1D03               	btfss	3,2
  2009  0077  287F               	goto	i1l1593
  2010                           
  2011                           ;main.c: 334: keyCount.up = 0x3C ;
  2012  0078  303C               	movlw	60
  2013  0079  00F0               	movwf	??__
  2014  007A  0870               	movf	??__,w
  2015  007B  00B2               	movwf	_keyCount
  2016                           
  2017                           ;main.c: 335: inputEvents_.keyPressHeldUp = 1; ;
  2018  007C  14BE               	bsf	_inputEvents_,1
  2019                           
  2020                           ;main.c: 336: }
  2021                           ;main.c: 337: }
  2022  007D  287F               	goto	i1l1593
  2023  007E                     i1l1591:	
  2024                           
  2025                           ;main.c: 338: else
  2026                           ;main.c: 339: keyCount.up = 0 ;
  2027  007E  01B2               	clrf	_keyCount
  2028  007F                     i1l1593:	
  2029                           
  2030                           ;main.c: 341: if( portAState_.keyDown ) {
  2031  007F  1E40               	btfss	_portAState_,4
  2032  0080  288F               	goto	i1l1601
  2033                           
  2034                           ;main.c: 342: if( ++keyCount.down == 0x40 ) {
  2035  0081  3001               	movlw	1
  2036  0082  00F0               	movwf	??__
  2037  0083  0870               	movf	??__,w
  2038  0084  07B3               	addwf	_keyCount+1,f
  2039  0085  3040               	movlw	64
  2040  0086  0633               	xorwf	_keyCount+1,w
  2041  0087  1D03               	btfss	3,2
  2042  0088  2890               	goto	i1l1603
  2043                           
  2044                           ;main.c: 343: keyCount.down = 0x3C ;
  2045  0089  303C               	movlw	60
  2046  008A  00F0               	movwf	??__
  2047  008B  0870               	movf	??__,w
  2048  008C  00B3               	movwf	_keyCount+1
  2049                           
  2050                           ;main.c: 344: inputEvents_.keyPressHeldDown = 1; ;
  2051  008D  15BE               	bsf	_inputEvents_,3
  2052                           
  2053                           ;main.c: 345: }
  2054                           ;main.c: 346: }
  2055  008E  2890               	goto	i1l1603
  2056  008F                     i1l1601:	
  2057                           
  2058                           ;main.c: 347: else
  2059                           ;main.c: 348: keyCount.down = 0 ;
  2060  008F  01B3               	clrf	_keyCount+1
  2061  0090                     i1l1603:	
  2062                           
  2063                           ;main.c: 350: if( portAState_.keyCenter ) {
  2064  0090  1EC0               	btfss	_portAState_,5
  2065  0091  28A0               	goto	i1l1611
  2066                           
  2067                           ;main.c: 351: if( ++keyCount.center == 0x40 ) {
  2068  0092  3001               	movlw	1
  2069  0093  00F0               	movwf	??__
  2070  0094  0870               	movf	??__,w
  2071  0095  07B4               	addwf	_keyCount+2,f
  2072  0096  3040               	movlw	64
  2073  0097  0634               	xorwf	_keyCount+2,w
  2074  0098  1D03               	btfss	3,2
  2075  0099  28A1               	goto	i1l1613
  2076                           
  2077                           ;main.c: 352: keyCount.center = 0x3C ;
  2078  009A  303C               	movlw	60
  2079  009B  00F0               	movwf	??__
  2080  009C  0870               	movf	??__,w
  2081  009D  00B4               	movwf	_keyCount+2
  2082                           
  2083                           ;main.c: 353: inputEvents_.keyPressHeldCenter = 1; ;
  2084  009E  16BE               	bsf	_inputEvents_,5
  2085                           
  2086                           ;main.c: 354: }
  2087                           ;main.c: 355: }
  2088  009F  28A1               	goto	i1l1613
  2089  00A0                     i1l1611:	
  2090                           
  2091                           ;main.c: 356: else
  2092                           ;main.c: 357: keyCount.center = 0 ;
  2093  00A0  01B4               	clrf	_keyCount+2
  2094  00A1                     i1l1613:	
  2095                           
  2096                           ;main.c: 358: }
  2097                           ;main.c: 361: if( !( interruptCount & 0x001F ) ) {
  2098  00A1  301F               	movlw	31
  2099  00A2  0577               	andwf	__@interruptCount,w
  2100  00A3  00F0               	movwf	??__
  2101  00A4  3000               	movlw	0
  2102  00A5  0578               	andwf	__@interruptCount+1,w
  2103  00A6  00F1               	movwf	??__+1
  2104  00A7  0870               	movf	??__,w
  2105  00A8  0471               	iorwf	??__+1,w
  2106  00A9  1D03               	btfss	3,2
  2107  00AA  28E5               	goto	i1l220
  2108                           
  2109                           ;main.c: 362: displayDigit = ( displayDigit + 1 ) & 0x03 ;
  2110  00AB  0879               	movf	_displayDigit,w
  2111  00AC  3E01               	addlw	1
  2112  00AD  3903               	andlw	3
  2113  00AE  00F0               	movwf	??__
  2114  00AF  0870               	movf	??__,w
  2115  00B0  00F9               	movwf	_displayDigit
  2116                           
  2117                           ;main.c: 363: if( autoHideCounter_ ) {
  2118  00B1  0838               	movf	_autoHideCounter_,w
  2119  00B2  0439               	iorwf	_autoHideCounter_+1,w
  2120  00B3  1903               	btfsc	3,2
  2121  00B4  28C7               	goto	i1l1623
  2122                           
  2123                           ;main.c: 364: LATA = 0x0F ;
  2124  00B5  300F               	movlw	15
  2125  00B6  0022               	movlb	2	; select bank2
  2126  00B7  008C               	movwf	12	;volatile
  2127                           
  2128                           ;main.c: 365: LATB = displayBuffer[ displayDigit ] ;
  2129  00B8  0879               	movf	_displayDigit,w
  2130  00B9  3E42               	addlw	(low (_displayBuffer| 0))& (0+255)
  2131  00BA  0086               	movwf	6
  2132  00BB  0187               	clrf	7
  2133  00BC  0801               	movf	1,w
  2134  00BD  008D               	movwf	13	;volatile
  2135                           
  2136                           ;main.c: 366: LATA = SEGMET_BIT2[ displayDigit ] ;
  2137  00BE  0879               	movf	_displayDigit,w
  2138  00BF  3E13               	addlw	low (_SEGMET_BIT2| (0+32768))
  2139  00C0  0084               	movwf	4
  2140  00C1  3084               	movlw	high (_SEGMET_BIT2| (0+32768))
  2141  00C2  1803               	skipnc
  2142  00C3  3E01               	addlw	1
  2143  00C4  0085               	movwf	5
  2144  00C5  0800               	movf	0,w	;code access
  2145  00C6  28E4               	goto	L7
  2146  00C7                     i1l1623:	
  2147                           ;main.c: 367: }
  2148                           
  2149                           
  2150                           ;main.c: 368: else {
  2151                           ;main.c: 369: LATB = SEGMENT_BIT[beatCounter.beat + 1] ;
  2152  00C7  0020               	movlb	0	; select bank0
  2153  00C8  083C               	movf	_beatCounter,w
  2154  00C9  3903               	andlw	3
  2155  00CA  3E01               	addlw	1
  2156  00CB  00F0               	movwf	??__
  2157  00CC  3000               	movlw	0
  2158  00CD  1803               	skipnc
  2159  00CE  3001               	movlw	1
  2160  00CF  00F1               	movwf	??__+1
  2161  00D0  3000               	movlw	low (_SEGMENT_BIT| (0+32768))
  2162  00D1  0770               	addwf	??__,w
  2163  00D2  0084               	movwf	4
  2164  00D3  3084               	movlw	high (_SEGMENT_BIT| (0+32768))
  2165  00D4  3D71               	addwfc	??__+1,w
  2166  00D5  0085               	movwf	5
  2167  00D6  0800               	movf	0,w	;code access
  2168  00D7  0022               	movlb	2	; select bank2
  2169  00D8  008D               	movwf	13	;volatile
  2170                           
  2171                           ;main.c: 370: LATA = SEGMET_BIT2[ beatCounter.beat ] ;
  2172  00D9  0020               	movlb	0	; select bank0
  2173  00DA  083C               	movf	_beatCounter,w
  2174  00DB  3903               	andlw	3
  2175  00DC  3E13               	addlw	low (_SEGMET_BIT2| (0+32768))
  2176  00DD  0084               	movwf	4
  2177  00DE  3084               	movlw	high (_SEGMET_BIT2| (0+32768))
  2178  00DF  1803               	skipnc
  2179  00E0  3E01               	addlw	1
  2180  00E1  0085               	movwf	5
  2181  00E2  0800               	movf	0,w	;code access
  2182  00E3  0022               	movlb	2	; select bank2
  2183  00E4                     L7:	
  2184  00E4  008C               	movwf	12	;volatile
  2185  00E5                     i1l220:	
  2186  00E5  0873               	movf	??__+3,w
  2187  00E6  0020               	movlb	0	; select bank0
  2188  00E7  00FF               	movwf	127
  2189  00E8  0009               	retfie
  2190  00E9                     __end_of__:	
  2191  007E                     btemp	set	126	;btemp
  2192  007E                     wtemp	set	126
  2193  007E                     wtemp0	set	126
  2194  0080                     wtemp1	set	128
  2195  0082                     wtemp2	set	130
  2196  0084                     wtemp3	set	132
  2197  0086                     wtemp4	set	134
  2198  0088                     wtemp5	set	136
  2199  007F                     wtemp6	set	127
  2200  007E                     ttemp	set	126
  2201  007E                     ttemp0	set	126
  2202  0081                     ttemp1	set	129
  2203  0084                     ttemp2	set	132
  2204  0087                     ttemp3	set	135
  2205  007F                     ttemp4	set	127
  2206  007E                     ltemp	set	126
  2207  007E                     ltemp0	set	126
  2208  0082                     ltemp1	set	130
  2209  0086                     ltemp2	set	134
  2210  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    23
    Data        8
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     18      42
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    _configuration_Load@config	PTR struct . size(1) Largest target is 4
		 -> config(BANK0[4]), 

    _configuration_Load@ptrConfig	PTR unsigned char  size(1) Largest target is 4
		 -> config(BANK0[4]), 

    _configuration_Save@config	PTR struct . size(1) Largest target is 4
		 -> config(BANK0[4]), 

    _configuration_Save@ptrConfig	PTR unsigned char  size(1) Largest target is 4
		 -> config(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->__configuration_Save
    __configuration_Save->__private_WriteByte
    __configuration_Load->__private_ReadByte

Critical Paths under __ in COMMON

    None.

Critical Paths under _main in BANK0

    _main->__configuration_Save

Critical Paths under __ in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __ in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __ in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __ in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __ in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1580
                                              6 BANK0     12    12      0
                __configuration_Load
                __configuration_Save
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __configuration_Save                                  7     7      0     721
                                              6 COMMON     1     1      0
                                              0 BANK0      6     6      0
                  __private_ReadByte
                 __private_WriteByte
 ---------------------------------------------------------------------------------
 (2) __private_WriteByte                                   2     1      1     196
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) __configuration_Load                                  5     5      0     321
                                              5 COMMON     1     1      0
                                              0 BANK0      4     4      0
                  __private_ReadByte
 ---------------------------------------------------------------------------------
 (2) __private_ReadByte                                    1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) __                                                    4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __configuration_Load
     __private_ReadByte
   __configuration_Save
     __private_ReadByte
     __private_WriteByte
   _initialize

 __ (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      2A       6       52.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      34      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Aug 12 09:29:38 2015

                                    __ 0004                            __CFG_CP$OFF 0000  
                                   ?__ 0070                                    ??__ 0070  
                                  l113 028D                                    l205 024E  
                                  l206 0203                                    l128 0424  
                                  l171 0129                                    l165 0116  
                                  l182 017A                                    l174 012F  
                                  l183 015D                                    l169 012A  
                                  l179 013F                                    _PR2 001B  
                                  _PR4 0416                           __CFG_CPD$OFF 0000  
                                  _PR6 041D                                    _PSA 04AB  
                         __CFG_BORV$HI 0000                                    wreg 0009  
                         __CFG_LVP$OFF 0000                                   l1811 0186  
                                 l1823 019B                                   l1751 0130  
                                 l1681 028F                                   l1841 01BA  
                                 l1825 01A3                                   l1817 018E  
                                 l1905 0249                                   l1691 02BA  
                                 l1843 01CD                                   l1819 0193  
                                 l1771 014F                                   l1685 02AB  
                                 l1853 01EA                                   l1847 01E0  
                                 l1849 01E5                                   l1877 0211  
                                 l1789 0168                                   l1895 023F  
                                 l1799 0171                                   l1897 0241  
                                 l1889 0232                           __CFG_WDTE$ON 0000  
                                 _LATA 010C                                   _LATB 010D  
                                 u1525 01C0                                   _TMR0 0015  
                                 _TMR2 001A                                   _TMR4 0415  
                                 _TMR6 041C                           __CFG_WRT$OFF 0000  
                        __CFG_FCMEN$ON 0000                                   _main 0104  
                                 fsr0h 0005                                   fsr1h 0007  
                                 fsr0l 0004                                   indf0 0000  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                          __CFG_BOREN$ON 0000  
                                 ltemp 007E                                   start 00E9  
                                 ttemp 007E                                   wtemp 007E  
                        __CFG_IESO$OFF 0000                          __CFG_PLLEN$ON 0000  
                                ?_main 0070                                  _T4CON 0417  
                                i1l220 00E5                     main@prevPortAState 0041  
                                _PORTA 000C                                  _TRISA 008C  
                                _TRISB 008D                          __CFG_PWRTE$ON 0000  
                                main@i 0031                           main@tmpValue 002A  
                                ltemp0 007E                                  ltemp1 0082  
                                ltemp2 0086                                  ltemp3 0080  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                         __CFG_MCLRE$OFF 0000  
                      __initialization 00EB                           __end_of_main 0257  
                               ??_main 0026                          main@isNonZero 0029  
                               _EEADRH 0192                                 _EEADRL 0191  
                               _CCPR2H 0299                                 _EEDATH 0194  
                               _CCPR2L 0298                                 _EEDATL 0193  
                               _EECON2 0196                                 _ANSELA 018C  
                               _ANSELB 018D                                 i1l1601 008F  
                               i1l1611 00A0                                 i1l1603 0090  
                               i1l1613 00A1                                 i1l1623 00C7  
                               i1l1555 0033                                 i1l1573 005D  
                               i1l1565 0052                                 u105_25 0020  
                               i1l1591 007E                                 i1l1559 0040  
                               i1l1593 007F                                 i1l1579 0065  
                               _INTCON 000B                                 _TMR0IE 005D  
                               _TMR0IF 005A                                 _TMR0CS 04AD  
                               _TMR2IE 0489                                 _TMR2IF 0089  
                               _TMR4IE 0499                                 _TMR4IF 0099  
                               _TMR0SE 04AC                                 _TMR6IE 049B  
                               _TMR6IF 009B                                 _TMR2ON 00E2  
                               _TMR4ON 20BA                                 _TMR6ON 20F2  
                       __CFG_STVREN$ON 0000                                 _config 0046  
                     _autoHideCounter_ 0038            __size_of__private_WriteByte 0012  
              __end_of__initialization 0101            __end_of__configuration_Load 0339  
          __end_of__configuration_Save 02C0                         __pcstackCOMMON 0070  
                     _durationCounter_ 003A                           __pidataBANK0 0436  
                           __pbssBANK0 0032                             __pmaintext 0104  
                           __pintentry 0004                                _CCP2CON 029A  
                              _CCP2SEL 08EB                                _CCPTMRS 029E  
                           __size_of__ 00E5                         main@keyPressed 002F  
                              _OSCTUNE 0098         __configuration_Save@saveIntcon 0020  
           __private_WriteByte@address 0075                  __configuration_Load@i 0023  
                    __private_ReadByte 0429                  __configuration_Save@i 0024  
      __configuration_Save@romPosition 0025                      main@COMPARE_UNITS 040B  
                   ?__private_ReadByte 0070                             _initialize 02C0  
                              __ptext1 02C0                                __ptext2 0257  
                              __ptext3 0417                                __ptext4 0308  
                              __ptext5 0429                    ??__private_ReadByte 0074  
                            _T2CONbits 001C                                _events_ 003D  
                            _T6CONbits 041E                                clrloop0 043F  
                 end_of_initialization 0101                                init_ram 0444  
                              initloop 0445              __end_of__private_ReadByte 0436  
            __end_ofmain@COMPARE_UNITS 0413                           __pstringtext 0400  
                         _displayDigit 0079                           _machineState 003F  
      __configuration_Load@romPosition 0022             __configuration_Load@config 0020  
                     __CFG_FOSC$INTOSC 0000                            ?_initialize 0070  
                  start_initialization 00EB             __end_of__private_WriteByte 0429  
                          _beatCounter 003C             __configuration_Save@config 0023  
           __size_of__private_ReadByte 000D              __private_ReadByte@address 0074  
                          __pdataBANK0 0042           __size_of__configuration_Load 0031  
         __size_of__configuration_Save 0069                            __pbssCOMMON 0077  
                            ___latbits 0001                          __pcstackBANK0 0020  
                            __end_of__ 00E9                    __size_of_initialize 0048  
                      main@compareUnit 002D          __configuration_Save@ptrConfig 0021  
              __private_WriteByte@data 0074                      main@displayNumber 002C  
                  __end_of_SEGMENT_BIT 040B                    __end_of_SEGMET_BIT2 0417  
                            clear_ram0 043E                               _PIE3bits 0093  
                         _inputEvents_ 003E                               _PIR2bits 0012  
                             _PIR3bits 0013                               _PSTR2CON 029D  
                            main@i_490 0030                             _EECON1bits 0195  
                         ??_initialize 0074                            _SEGMENT_BIT 0400  
                          _SEGMET_BIT2 0413  __configuration_Save@isPositionChanged 0022  
                             _keyCount 0032                    __configuration_Load 0308  
                  __configuration_Save 0257                          __size_of_main 0153  
                   __end_of_initialize 0308                     __private_WriteByte 0417  
                 ?__configuration_Load 0070                    ?__private_WriteByte 0074  
                 ?__configuration_Save 0070                           _tempoCounter 0035  
                           _INTCONbits 000B                               intlevel1 0000  
                 ??__private_WriteByte 0075                      __CFG_CLKOUTEN$OFF 0000  
                           _OSCCONbits 0099                       __@interruptCount 0077  
                ??__configuration_Load 0075                  ??__configuration_Save 0076  
                          _portAState_ 0040                          _displayBuffer 0042  
        __configuration_Load@ptrConfig 0021  
